[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/addresses.js",
    "content": "/**\n * Addresses contains addresses of all contracts of a KyberNetwork reserve.\n */\nexport default class Addresses {\n  get sanityRates () {\n    return this._sanityRates\n  }\n\n  set sanityRates (value) {\n    this._sanityRates = value\n  }\n\n  get conversionRates () {\n    return this._conversionRates\n  }\n\n  set conversionRates (value) {\n    this._conversionRates = value\n  }\n\n  get reserve () {\n    return this._reserve\n  }\n\n  set reserve (value) {\n    this._reserve = value\n  }\n\n  /**\n   * Create a addresses instance.\n   * @param {string} reserve - Address of reserve smart contract.\n   * @param {string} conversionRates - Address of pricing smart contract.\n   * @param {string} sanityRates - Address of pricing smart contract.\n   */\n  constructor (reserve, conversionRates, sanityRates) {\n    this._reserve = reserve\n    this._conversionRates = conversionRates\n    this._sanityRates = sanityRates\n  }\n}\n",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/addresses.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Addresses",
    "memberof": "src/addresses.js",
    "static": true,
    "longname": "src/addresses.js~Addresses",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/addresses.js",
    "importStyle": "Addresses",
    "description": "Addresses contains addresses of all contracts of a KyberNetwork reserve.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "get",
    "name": "sanityRates",
    "memberof": "src/addresses.js~Addresses",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/addresses.js~Addresses#sanityRates",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "set",
    "name": "sanityRates",
    "memberof": "src/addresses.js~Addresses",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/addresses.js~Addresses#sanityRates",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "_sanityRates",
    "memberof": "src/addresses.js~Addresses",
    "static": false,
    "longname": "src/addresses.js~Addresses#_sanityRates",
    "access": "private",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "get",
    "name": "conversionRates",
    "memberof": "src/addresses.js~Addresses",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/addresses.js~Addresses#conversionRates",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "set",
    "name": "conversionRates",
    "memberof": "src/addresses.js~Addresses",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/addresses.js~Addresses#conversionRates",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "_conversionRates",
    "memberof": "src/addresses.js~Addresses",
    "static": false,
    "longname": "src/addresses.js~Addresses#_conversionRates",
    "access": "private",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "get",
    "name": "reserve",
    "memberof": "src/addresses.js~Addresses",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/addresses.js~Addresses#reserve",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "set",
    "name": "reserve",
    "memberof": "src/addresses.js~Addresses",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/addresses.js~Addresses#reserve",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "_reserve",
    "memberof": "src/addresses.js~Addresses",
    "static": false,
    "longname": "src/addresses.js~Addresses#_reserve",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/addresses.js~Addresses",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/addresses.js~Addresses#constructor",
    "access": "public",
    "description": "Create a addresses instance.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "reserve",
        "description": "Address of reserve smart contract."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "conversionRates",
        "description": "Address of pricing smart contract."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sanityRates",
        "description": "Address of pricing smart contract."
      }
    ]
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/base_contract.js",
    "content": "import Web3 from 'web3'\n\nimport baseContractABI from '../abi/base_contract_abi.json'\nimport { validateAddress } from './validate.js'\nimport { assertAdmin } from './permission_assert.js'\n\n/**\n * BaseContract contains common methods for all contracts of a KyberNetwork\n * reserve.\n */\nexport default class BaseContract {\n  /**\n   * Create new BaseContract instance.\n   * @param {object} web3 - Web3 instance\n   * @param {string} address - address of smart contract.\n   */\n  constructor (web3, address) {\n    if (!web3) {\n      throw new Error('missing web3 instance')\n    }\n\n    if (web3.currentProvider == null ) {\n      throw new Error('web3 instance has no provider')\n    } \n\n    validateAddress(address)\n\n    this.web3 = web3\n    this.contract = new web3.eth.Contract(baseContractABI, address)\n  }\n\n  /**\n   * Return the current admin address of contract.\n   * @return {string} - current admin address\n   */\n  admin () {\n    return this.contract.methods.admin().call()\n  }\n\n  /**\n   * Return the pending admin address of contract.\n   * An admin address is placed in pending if it is transfered but hasn't been\n   * claimed yet.\n   * @return {string} - pending admin address\n   */\n  pendingAdmin () {\n    return this.contract.methods.pendingAdmin().call()\n  }\n\n  /**\n   * transfer admin privilege to given address.\n   * @param {object} adminAddress - current admin account\n   * @param {string} address - new admin address\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n  async transferAdmin (adminAddress, address, gasPrice) {\n    validateAddress(address)\n    await assertAdmin(this, adminAddress)\n    const med = this.contract.methods.transferAdmin(address)\n    return med.send({\n      from: adminAddress,\n      gas: await med.estimateGas({\n        from: adminAddress,\n        gasPrice: gasPrice\n      })\n    })\n  }\n\n  /**\n   * Claim admin privilege. The account address should be in already placed\n   * in pendingAdmin for this to works.\n   * @param {object} newAccount - the pending admin account\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n  async claimAdmin (newAccount, gasPrice) {\n    const med = this.contract.methods.claimAdmin()\n    return med.send({\n      from: newAccount,\n      gas: await med.estimateGas({\n        from: newAccount,\n        gasPrice: gasPrice\n      })\n    })\n  }\n\n  /**\n   * Return operator addresses of contract.\n   * @return {array} - list of operator addresses\n   */\n  getOperators () {\n    return this.contract.methods.getOperators().call()\n  }\n\n  /**\n   * Add given address from operators list.\n   * @param {object} adminAddress - current admin account\n   * @param {string} address - address to remove from operators list.\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n  async addOperator (adminAddress, address, gasPrice) {\n    validateAddress(address)\n    await assertAdmin(this, adminAddress)\n    const med = this.contract.methods.addOperator(address)\n    return med.send({\n      from: adminAddress,\n      gas: await med.estimateGas({\n        from: adminAddress,\n        gasPrice: gasPrice\n      })\n    })\n  }\n\n  /**\n   * Remove given address from operators list.\n   * @param {object} adminAddress - current admin account\n   * @param {string} address - address to remove from operators list.\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n  async removeOperator (adminAddress, address, gasPrice) {\n    validateAddress(address)\n    await assertAdmin(this, adminAddress)\n    const med = this.contract.methods.removeOperator(address)\n    return med.send({\n      from: adminAddress,\n      gas: await med.estimateGas({\n        from: adminAddress,\n        gasPrice: gasPrice\n      })\n    })\n  }\n\n  /**\n   * Return alerter addresses of contract.\n   * @return {array} - list of alerter addresses\n   */\n  getAlerters () {\n    return this.contract.methods.getAlerters().call()\n  }\n\n  /**\n   * Add new address to alerters list.\n   * @param {object} adminAddress - current admin account\n   * @param {string} address - address to add to alerters list.\n   * @param {number} gasPrice (string) - the gasPrice desired for the tx\n   */\n  async addAlerter (adminAddress, address, gasPrice) {\n    validateAddress(address)\n    await assertAdmin(this, adminAddress)\n    const med = this.contract.methods.addAlerter(address)\n    return med.send({\n      from: adminAddress,\n      gas: await med.estimateGas({\n        from: adminAddress,\n        gasPrice: gasPrice\n      })\n    })\n  }\n\n  /**\n   * Remove address from alerters list.\n   * @param {object} adminAddress - current admin account\n   * @param {string} address - address to remove from alerters list.\n   * @param {number} gasPrice (string) - the gasPrice desired for the tx\n   */\n  async removeAlerter (adminAddress, address, gasPrice) {\n    validateAddress(address)\n    await assertAdmin(this, adminAddress)\n    const med = this.contract.methods.removeAlerter(address)\n    return med.send({\n      from: adminAddress,\n      gas: await med.estimateGas({\n        from: adminAddress,\n        gasPrice: gasPrice\n      })\n    })\n  }\n}\n",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/base_contract.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "class",
    "name": "BaseContract",
    "memberof": "src/base_contract.js",
    "static": true,
    "longname": "src/base_contract.js~BaseContract",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/base_contract.js",
    "importStyle": "BaseContract",
    "description": "BaseContract contains common methods for all contracts of a KyberNetwork\nreserve.",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 65,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/base_contract.js~BaseContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/base_contract.js~BaseContract#constructor",
    "access": "public",
    "description": "Create new BaseContract instance.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "web3",
        "description": "Web3 instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "address of smart contract."
      }
    ]
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "web3",
    "memberof": "src/base_contract.js~BaseContract",
    "static": false,
    "longname": "src/base_contract.js~BaseContract#web3",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "contract",
    "memberof": "src/base_contract.js~BaseContract",
    "static": false,
    "longname": "src/base_contract.js~BaseContract#contract",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "admin",
    "memberof": "src/base_contract.js~BaseContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/base_contract.js~BaseContract#admin",
    "access": "public",
    "description": "Return the current admin address of contract.",
    "lineNumber": 36,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "current admin address"
    },
    "params": []
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "pendingAdmin",
    "memberof": "src/base_contract.js~BaseContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/base_contract.js~BaseContract#pendingAdmin",
    "access": "public",
    "description": "Return the pending admin address of contract.\nAn admin address is placed in pending if it is transfered but hasn't been\nclaimed yet.",
    "lineNumber": 46,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "pending admin address"
    },
    "params": []
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "transferAdmin",
    "memberof": "src/base_contract.js~BaseContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/base_contract.js~BaseContract#transferAdmin",
    "access": "public",
    "description": "transfer admin privilege to given address.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "current admin account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "new admin address"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "claimAdmin",
    "memberof": "src/base_contract.js~BaseContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/base_contract.js~BaseContract#claimAdmin",
    "access": "public",
    "description": "Claim admin privilege. The account address should be in already placed\nin pendingAdmin for this to works.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newAccount",
        "description": "the pending admin account"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "getOperators",
    "memberof": "src/base_contract.js~BaseContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/base_contract.js~BaseContract#getOperators",
    "access": "public",
    "description": "Return operator addresses of contract.",
    "lineNumber": 90,
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "list of operator addresses"
    },
    "params": []
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "addOperator",
    "memberof": "src/base_contract.js~BaseContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/base_contract.js~BaseContract#addOperator",
    "access": "public",
    "description": "Add given address from operators list.",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "current admin account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "address to remove from operators list."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "removeOperator",
    "memberof": "src/base_contract.js~BaseContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/base_contract.js~BaseContract#removeOperator",
    "access": "public",
    "description": "Remove given address from operators list.",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "current admin account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "address to remove from operators list."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "getAlerters",
    "memberof": "src/base_contract.js~BaseContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/base_contract.js~BaseContract#getAlerters",
    "access": "public",
    "description": "Return alerter addresses of contract.",
    "lineNumber": 136,
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "list of alerter addresses"
    },
    "params": []
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "addAlerter",
    "memberof": "src/base_contract.js~BaseContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/base_contract.js~BaseContract#addAlerter",
    "access": "public",
    "description": "Add new address to alerters list.",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "current admin account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "address to add to alerters list."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(string) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "removeAlerter",
    "memberof": "src/base_contract.js~BaseContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/base_contract.js~BaseContract#removeAlerter",
    "access": "public",
    "description": "Remove address from alerters list.",
    "lineNumber": 165,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "current admin account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "address to remove from alerters list."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(string) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/contracts/ConversionRatesContract.js",
    "content": "let byteCode;\nexport default byteCode ='6060604052600a6009556000600d55341561001957600080fd5b60405160208061312b8339810160405280805160008054600160a060020a03191633600160a060020a03908116919091179091559092508291508116151561006057600080fd5b60008054600160a060020a03909216600160a060020a03199092169190911790555061309a806100916000396000f3006060604052600436106101a85763ffffffff60e060020a60003504166301a12fd381146101ad57806314673d31146101ce578063158859f7146101ed578063162656941461020c5780631a4813d7146102315780631d6a8bda146103c957806326782247146103e857806327a099d8146104175780632ba996a51461047d5780633ccdbb2814610490578063408ee7fe146104b95780635085c9f1146104d857806362674e93146104eb57806364887334146105105780636c6295b8146105e8578063721bba59146105fe57806375829def1461063957806377f50f97146106585780637acc86781461066b5780637c423f541461068a5780638036d7571461069d57806380d8b380146106bc5780639870d7fe146107d9578063a7f43acd146107f8578063a80c609e1461080b578063ac8a584a1461082d578063b8e9c22e1461084c578063bc9cbcc814610876578063bfee356914610993578063c6fd2103146109bb578063ce56c454146109e3578063cf8fee1114610a05578063d48bfca714610a29578063e4a2ac6214610a48578063e7d4fd9114610ab6578063f851a44014610af9575b600080fd5b34156101b857600080fd5b6101cc600160a060020a0360043516610b0c565b005b34156101d957600080fd5b6101cc600160a060020a0360043516610c7c565b34156101f857600080fd5b6101cc600160a060020a0360043516610cb9565b341561021757600080fd5b61021f610d29565b60405190815260200160405180910390f35b341561023c57600080fd5b6101ccd2f95505050505050565b34156103d457600080fd5b6101cc600160a060020a0360043516610e95565b34156103f357600080fd5b6103fb610f21565b604051600160a060020a03909116815260200160405180910390f35b341561042257600080fd5b61042a610f30565b60405160208082528190810183818151815260200191508051906020019060200280838360005b83811015610469578082015183820152602001610451565b505050509050019250505060405180910390f35b341561048857600080fd5b61042a610f99565b341561049b57600080fd5b6101cc600160a060020a036004358116906024359060443516610fff565b34156104c457600080fd5b6101cc600160a060020a03600435166110f6565b34156104e357600080fd5b61021f6111f2565b34156104f657600080fd5b61021f600160a060020a03600435166024356044356111f8565b341561051b57600080fd5b6101cc600460248135818101908301358060208181020160405190810160405280939291908181526020018383602002808284378201915050505050509190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437509496506114ec95505050505050565b34156105f357600080fd5b6101cc60043561162d565b341561060957600080fd5b61061d600160a060020a036004351661164d565b6040519115158252151560208201526040908101905180910390f35b341561064457600080fd5b6101cc600160a060020a0360043516611675565b341561066357600080fd5b6101cc611710565b341561067657600080fd5b6101cc600160a060020a03600435166117aa565b341561069557600080fd5b61042a61188c565b34156106a857600080fd5b61021f600160a060020a03600435166118f2565b34156106c757600080fd5b6101cc60048035600160a060020ad95505050505050565b34156107e457600080fd5b6101cc600160a060020a0360043516611a85565b341561080357600080fd5b6103fb611b55565b341561081657600080fd5b61021f600160a060020a0360043516602435611b64565b341561083857600080fd5b6101cc600160a060020a0360043516611b81565b341561085757600080fd5b61021f600160a060020a03600435166024356044351515606435611ced565b341561088157600080fd5b6101cc60048035600160a060020ab341561099e57600080fd5b6101cc600160a060020a03600435166024356044356064356123b2565b34156109c657600080fd5b6101cc600160a060020a0360043516602435604435606435612420565b34156109ee57600080fd5b6101cc600435600160a060020a0360243516612460565b3415610a1057600080fd5b61021f600160a060020a036004351660243515156124f3565b3415610a3457600080fd5b6101cc600160a060020a0360043516612541565b3415610a5357600080fd5b610a67600160a060020a036004351661264e565b60405193845260208401929092527fff00000000000000000000000000000000000000000000000000000000000000908116604080850191909152911660608301526080909101905180910390f35b3415610ac157600080fd5b610ad5600160a060020a0360043516612712565b60405180848152602001838152602001828152602001935050505060405180910390f35b3415610b0457600080fd5b6103fb61273a565b6000805433600160a060020a03908116911614610b2857600080fd5b600160a060020a03821660009081526003602052604090205460ff161515610b4f57600080fd5b50600160a060020a0381166000908152600360205260408120805460ff191690555b600554811015610c785781600160a060020a0316600582815481101515610b9457fe5b600091825260209091200154600160a060020a03161415610c7057600580546000198101908110610bc157fe5b60009182526020909120015460058054600160a060020a039092169183908110610be757fe5b60009182526020909120018054600160a060020a031916600160a060020a03929092169190911790556005805490610c23906000198301612fa5565b507f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762826000604051600160a060020a039092168252151560208201526040908101905180910390a1610c78565b600101610b71565b5050565b60005433600160a060020a03908116911614610c9757600080fd5b600e8054600160a060020a031916600160a060020a0392909216919091179055565b600160a060020a03331660009081526003602052604090205460ff161515610ce057600080fd5b600160a060020a0381166000908152600b602052604090205460ff161515610d0757600080fd5b600160a060020a03166000908152600b60205260409020805461ff0019169055565b60095481565b600160a060020a03331660009081526002602052604081205460ff161515610d5657600080fd5b8651885114610d6457600080fd5b8551885114610d7257600080fd5b8451845114610d8057600080fd5b8151845114610d8e57600080fd5b5060005b8751811015610e7f57600b6000898381518110610dab57fe5b90602001906020020151600160a060020a0316815260208101919091526040016000205460ff161515610ddd57600080fd5b868181518110610de957fe5b90602001906020020151600b60008a8481518110610e0357fe5b90602001906020020151600160a060020a03168152602081019190915260400160002060030155858181518110610e3657fe5b90602001906020020151600b60008a8481518110610e5057fe5b90602001906020020151600160a060020a03168152602081019190915260400160002060040155600101610d92565b610e8b858585856114ec565b5050505050505050565b60005433600160a060020a03908116911614610eb057600080fd5b600160a060020a0381166000908152600b602052604090205460ff161515610ed757600080fd5b600160a060020a0381166000908152600660205260409020541515610efb57600080fd5b600160a060020a03166000908152600b60205260409020805461ff001916610100179055565b600154600160a060020a031681565b610f38612fce565b6004805480602002602001604051908101604052809291908181526020018280548015610f8e57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610f70575b505050505090505b90565b610fa1612fce565b600a805480602002602001604051908101604052809291908181526020018280548015610f8e57602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610f70575050505050905090565b60005433600160a060020a0390811691161461101a57600080fd5b82600160a060020a031663a9059cbb828460006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561107757600080fd5b6102c65a03f1151561108857600080fd5b50505060405180519050151561109d57600080fd5b7f72cb8a894ddb372ceec3d2a7648d86f17d5a15caae0e986c53109b8a9a9385e6838383604051600160a060020a03938416815260208101929092529091166040808301919091526060909101905180910390a1505050565b60005433600160a060020a0390811691161461111157600080fd5b600160a060020a03811660009081526003602052604090205460ff161561113757600080fd5b6005546032901061114757600080fd5b7f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762816001604051600160a060020a039092168252151560208201526040908101905180910390a1600160a060020a0381166000908152600360205260409020805460ff1916600190811790915560058054909181016111c68382612fa5565b5060009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055565b600d5481565b60008215156112235750600160a060020a0383166000908152600b60205260409020600501546114e5565b826001141561126657600160a060020a0384166000908152600b6020526040902060050180548390811061125357fe5b90600052602060002090015490506114e5565b82600214156112915750600160a060020a0383166000908152600b60205260409020600601546114e5565b82600314156112c157600160a060020a0384166000908152600b6020526040902060060180548390811061125357fe5b82600414156112ec5750600160a060020a0383166000908152600b60205260409020600701546114e5565b826005141561131c57600160a060020a0384166000908152600b6020526040902060070180548390811061125357fe5b82600614156113475750600160a060020a0383166000908152600b60205260409020600801546114e5565b826007141561137757600160a060020a0384166000908152600b6020526040902060080180548390811061125357fe5b82600814156113a25750600160a060020a0383166000908152600b60205260409020600901546114e5565b82600914156113d257600160a060020a0384166000908152600b6020526040902060090180548390811061125357fe5b82600a14156113fd5750600160a060020a0383166000908152600b60205260409020600a01546114e5565b82600b141561142d57600160a060020a0384166000908152600b60205260409020600a0180548390811061125357fe5b82600c14156114595750600160a060020a0383166000908152600b6020819052604090912001546114e5565b82600d141561148a57600160a060020a0384166000908152600b602081905260409091200180548390811061125357fe5b82600e14156114b55750600160a060020a0383166000908152600b60205260409020600c01546114e5565b82600f14156101a857600160a060020a0384166000908152600b60205260409020600c0180548390811061125357fe5b9392505050565b600160a060020a0333166000908152600260205260408120548190819060ff16151561151757600080fd5b855187511461152557600080fd5b865184511461153357600080fd5b63ffffffff85111561154457600080fd5b6e0100000000000000000000000000009250600091505b835182101561162457600c5484838151811061157357fe5b906020019060200201511061158757600080fd5b82830285028387848151811061159957fe5b9060200190602002015172010000000000000000000000000000000000009004028884815181106115c657fe5b90602001906020020151720100000000000000000000000000000000000090041717905080600c8584815181106115f957fe5b906020019060200201518154811061160d57fe5b60009182526020909120015560019091019061155b565b50505050505050565b60005433600160a060020a0390811691161461164857600080fd5b600955565b600160a060020a03166000908152600b602052604090205460ff808216926101009092041690565b60005433600160a060020a0390811691161461169057600080fd5b600160a060020a03811615156116a557600080fd5b6001547f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc4090600160a060020a0316604051600160a060020a03909116815260200160405180910390a160018054600160a060020a031916600160a060020a0392909216919091179055565b60015433600160a060020a0390811691161461172b57600080fd5b6001546000547f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed91600160a060020a039081169116604051600160a060020a039283168152911660208201526040908101905180910390a16001805460008054600160a060020a0319908116600160a060020a03841617909155169055565b60005433600160a060020a039081169116146117c557600080fd5b600160a060020a03811615156117da57600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc4081604051600160a060020a03909116815260200160405180910390a16000547f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed908290600160a060020a0316604051600160a060020a039283168152911660208201526040908101905180910390a160008054600160a060020a031916600160a060020a0392909216919091179055565b611894612fce565b6005805480602002602001604051908101604052809291908181526020018280548015610f8e57602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610f70575050505050905090565b600160a060020a0381166000908152600b6020526040812060010154600c8054839290811061191d57fe5b906000526020600020900154905061193481612749565b91505b50919050565b600160a060020a03331660009081526002602052604090205460ff16151561196457600080fd5b825184511461197257600080fd5b805182511461198057600080fd5b600a8451111561198f57600080fd5b600a8251111561199e57600080fd5b600160a060020a0385166000908152600b602052604090205460ff1615156119c557600080fd5b6040805190810160409081528582526020808301869052600160a060020a0388166000908152600b90915220600501815181908051611a08929160200190612fe0565b50602082015181600101908051611a23929160200190612fe0565b509050506040805190810160409081528382526020808301849052600160a060020a0388166000908152600b90915220600701815181908051611a6a929160200190612fe0565b50602082015181600101908051610e8b929160200190612fe0565b60005433600160a060020a03908116911614611aa057600080fd5b600160a060020a03811660009081526002602052604090205460ff1615611ac657600080fd5b60045460329010611ad657600080fd5b7f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b816001604051600160a060020a039092168252151560208201526040908101905180910390a1600160a060020a0381166000908152600260205260409020805460ff1916600190811790915560048054909181016111c68382612fa5565b600e54600160a060020a031681565b600760209081526000928352604080842090915290825290205481565b6000805433600160a060020a03908116911614611b9d57600080fd5b600160a060020a03821660009081526002602052604090205460ff161515611bc457600080fd5b50600160a060020a0381166000908152600260205260408120805460ff191690555b600454811015610c785781600160a060020a0316600482815481101515611c0957fe5b600091825260209091200154600160a060020a03161415611ce557600480546000198101908110611c3657fe5b60009182526020909120015460048054600160a060020a039092169183908110611c5c57fe5b60009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055600480546000190190611c989082612fa5565b507f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b826000604051600160a060020a039092168252151560208201526040908101905180910390a1610c78565b600101611be6565b600160a060020a0384166000908152600b602052604081205481908190819081908190819081908190610100900460ff161515611d2d5760009850612273565b600160a060020a038d166000908152600660205260409020541515611d555760009850612273565b600160a060020a038d166000908152600b6020526040902060010154600c80549091908110611d8057fe5b9060005260206000209001549750611d9788612749565b60095490975087018c10611dae5760009850612273565b611db98d888e612756565b90965094508a15611ffd5750600160a060020a038c166000908152600b6020526040902060030154611ded888e600161278b565b91508160000b600a029250611e0281846127e4565b9050611e0f8d828c612830565b600160a060020a038e166000908152600b602052604090819020919b50968b01968b9550611efa91600501908051908101604052908160008201805480602002602001604051908101604052809291908181526020018280548015611e9357602002820191906000526020600020905b815481526020019060010190808311611e7f575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611eeb57602002820191906000526020600020905b815481526020019060010190808311611ed7575b5050505050815250508b61285a565b9250611f0681846127e4565b600160a060020a038e166000908152600b602052604090819020919250611fea91600901908051908101604052908160008201805480602002602001604051908101604052809291908181526020018280548015611f8357602002820191906000526020600020905b815481526020019060010190808311611f6f575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611fdb57602002820191906000526020600020905b815481526020019060010190808311611fc7575b5050505050815250508761285a565b9250611ff681846127e4565b905061222d565b50600160a060020a038c166000908152600b6020526040812060040154906120289089908f9061278b565b91508160000b600a02925061203d81846127e4565b600160a060020a038e166000908152600b6020526040908190206000198d0298890198965091925061212891600701908051908101604052908160008201805480602002602001604051908101604052809291908181526020018280548015611e935760200282019190600052602060002090815481526020019060010190808311611e7f575050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611eeb5760200282019190600052602060002090815481526020019060010190808311611ed7575050505050815250508b61285a565b925061213481846127e4565b905061221e600b60008f600160a060020a0316600160a060020a03168152602001908152602001600020600b0160408051908101604052908160008201805480602002602001604051908101604052809291908181526020018280548015611f835760200282019190600052602060002090815481526020019060010190808311611f6f575050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611fdb5760200282019190600052602060002090815481526020019060010190808311611fc7575050505050815250508761285a565b925061222a81846127e4565b90505b6122368d6128e2565b61223f87612900565b1061224d5760009850612273565b6122568d61291c565b612261858701612900565b1061226f5760009850612273565b8098505b5050505050505050949350505050565b600160a060020a03331660009081526002602052604090205460ff1615156122aa57600080fd5b82518451146122b857600080fd5b80518251146122c657600080fd5b600a845111156122d557600080fd5b600a825111156122e457600080fd5b600160a060020a0385166000908152600b602052604090205460ff16151561230b57600080fd5b6040805190810160409081528582526020808301869052600160a060020a0388166000908152600b9091522060090181518190805161234e929160200190612fe0565b50602082015181600101908051612369929160200190612fe0565b509050506040805190810160409081528382526020808301849052600160a060020a0388166000908152600b918290529190912001815181908051611a6a929160200190612fe0565b60005433600160a060020a039081169116146123cd57600080fd5b606060405190810160409081528482526020808301859052818301849052600160a060020a0387166000908152600690915220815181556020820151816001015560408201516002909101555050505050565b600e5433600160a060020a0390811691161461243b57600080fd5b81151561244e5761244b846118f2565b91505b61245a8484848461293a565b50505050565b60005433600160a060020a0390811691161461247b57600080fd5b600160a060020a03811682156108fc0283604051600060405180830381858888f1935050505015156124ac57600080fd5b7fec47e7ed86c86774d1a72c19f35c639911393fe7c1a34031fdbd260890da90de8282604051918252600160a060020a031660208201526040908101905180910390a15050565b6000811561251d5750600160a060020a0382166000908152600b602052604090206003015461253b565b50600160a060020a0382166000908152600b60205260409020600401545b92915050565b60005433600160a060020a0390811691161461255c57600080fd5b600160a060020a0381166000908152600b602052604090205460ff161561258257600080fd5b600160a060020a0381166000908152600b60205260409020805460ff19166001908117909155600a8054909181016125ba8382612fa5565b5060009182526020909120018054600160a060020a031916600160a060020a038316179055600d5415156125fc57600c8054906125fa9060018301612fa5565b505b600c54600160a060020a0382166000908152600b60205260409020600019909101600182810191909155600d546002909201829055600e910106600d5561264281612a6a565b61264b81612aa5565b50565b600160a060020a0381166000908152600b60205260408120548190819081908190819060ff16151561267f57600080fd5b5050600160a060020a0385166000908152600b602052604090206001810154600290910154600c8054839183916126cf9190849081106126bb57fe5b9060005260206000209001548a600161278b565b60f860020a026126fb600c868154811015156126e757fe5b9060005260206000209001548b600061278b565b60f860020a02955095509550955050509193509193565b600160a060020a03166000908152600660205260409020805460018201546002909201549092565b600054600160a060020a031681565b60e060020a81045b919050565b600160a060020a038316600090815260066020526040812054819061277c868686612b67565b90820297910295509350505050565b600160a060020a0382166000908152600b60205260408120600201548183156127b85750601281016127be565b50600481015b8581602081106127ca57fe5b1a60f860020a0260f860020a900492505b50509392505050565b60008069d3c21bcecceda10000008411156127fe57600080fd5b61270f1983121561280e57600080fd5b64174876e80083131561282057600080fd5b5050612710908101919091020490565b600080600061283e86612c55565b91506012905061285085828487612d0f565b9695505050505050565b60008060008460200151519150600090505b818110156128ba578451818151811061288157fe5b9060200190602002015184136128b257846020015181815181106128a157fe5b9060200190602002015192506128da565b60010161286c565b846020015160018303815181106128cd57fe5b9060200190602002015192505b505092915050565b600160a060020a031660009081526006602052604090206002015490565b60008082121561291557506000198102612751565b5080612751565b600160a060020a031660009081526006602052604090206001015490565b600080600061294761302b565b600160a060020a0388166000908152600660205260408120546005870695508881151561297057fe5b600160a060020a038b1660009081526007602090815260408083208a845290915281205492909105955093506129a590612da8565b91508582602001511415612a045786826060015114156129d9578382818151019052508360408301818151019052506129ff565b6129e4898888612e35565b84810160408401529250838281815101905250606082018790525b612a2e565b612a0f898888612b67565b8584526020840188905260608401899052858201604085015290935090505b612a3782612ebd565b600160a060020a039099166000908152600760209081526040808320978352969052949094209790975550505050505050565b60005b6005811015610c7857600160a060020a0382166000908152600760209081526040808320848452909152902060019081905501612a6d565b600160a060020a03811673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612aeb57600160a060020a03811660009081526008602052604090206012905561264b565b80600160a060020a031663313ce5676000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515612b3157600080fd5b6102c65a03f11515612b4257600080fd5b5050506040518051600160a060020a0383166000908152600860205260409020555050565b6000806000806000806000612b7a61302b565b60009750600096506000955060009450899350889250600091505b6005821015612c3c57600160a060020a038b166000908152600760209081526040808320858452909152902054612bcb90612da8565b905082816020015111158015612be5575083816020015110155b15612bf1578051850194505b89816060015114612c0157612c31565b8581602001511015612c1257612c31565b80602001519550806040015197508881602001511415612c3157805196505b600190910190612b95565b871515612c47578497505b505050505050935093915050565b600080600160a060020a03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612c865760129150611937565b50600160a060020a03821660009081526008602052604090205480151561253b5782600160a060020a031663313ce5676000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515612ced57600080fd5b6102c65a03f11515612cfe57600080fd5b505050604051805190509150611937565b60006b204fce5e3e25026110000000851115612d2a57600080fd5b69d3c21bcecceda1000000821115612d4157600080fd5b838310612d745760128484031115612d5857600080fd5b670de0b6b3a7640000858302858503600a0a025b049050612da0565b60128385031115612d8457600080fd5b828403600a0a670de0b6b3a764000002828602811515612d6c57fe5b949350505050565b612db061302b565b612db861302b565b67ffffffffffffffff83811660070b82526801000000000000000084041667ffffffffffffffff908116602083015270010000000000000000000000000000000084041660070b60408201527801000000000000000000000000000000000000000000000000830467ffffffffffffffff16606082015292915050565b600080612e4061302b565b83851115612e4d57600080fd5b60009250600091505b60058210156127db57600160a060020a0386166000908152600760209081526040808320858452909152902054612e8c90612da8565b905083816020015111158015612ea6575084816020015110155b15612eb2578051830192505b600190910190612e56565b600080678000000000000000835112612ed557600080fd5b677fffffffffffffff19835113612eeb57600080fd5b68010000000000000000836020015110612f0457600080fd5b678000000000000000604084015112612f1c57600080fd5b677fffffffffffffff19604084015113612f3557600080fd5b68010000000000000000836060015110612f4e57600080fd5b67ffffffffffffffff83511690506801000000000000000083602001510217680100000000000000008067ffffffffffffffff60408601511602021768010000000000000000808060608601510202021792915050565b815481835581811511612fc957600083815260209020612fc9918101908301613054565b505050565b60206040519081016040526000815290565b82805482825590600052602060002090810192821561301b579160200282015b8281111561301b578251825591602001919060010190613000565b50613027929150613054565b5090565b608060405190810160405280600081526020016000815260200160008152602001600081525090565b610f9691905b80821115613027576000815560010161305a5600a165627a7a723058200ef3073f487bcdca36f37ac65d9b555ce0cd9a3d31ce3723d09d77bd9f8a42220029'",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/contracts/ConversionRatesContract.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "byteCode",
    "memberof": "src/contracts/ConversionRatesContract.js",
    "static": true,
    "longname": "src/contracts/ConversionRatesContract.js~byteCode",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/contracts/ConversionRatesContract.js",
    "importStyle": "byteCode",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "src/contracts/KyberReserveContract.js",
    "content": "let byteCode;\nexport default byteCode =  ''",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/contracts/KyberReserveContract.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "byteCode",
    "memberof": "src/contracts/KyberReserveContract.js",
    "static": true,
    "longname": "src/contracts/KyberReserveContract.js~byteCode",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/contracts/KyberReserveContract.js",
    "importStyle": "byteCode",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "src/contracts/SanityRatesContract.js",
    "content": "let byteCode;\nexport default byteCode =  ''\n",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/contracts/SanityRatesContract.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "byteCode",
    "memberof": "src/contracts/SanityRatesContract.js",
    "static": true,
    "longname": "src/contracts/SanityRatesContract.js~byteCode",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/contracts/SanityRatesContract.js",
    "importStyle": "byteCode",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "src/conversion_rates_contract.js",
    "content": "import Web3 from 'web3'\nimport BigNumber from 'bignumber.js'\n\nimport BaseContract from './base_contract.js'\nimport conversionRatesABI from '../abi/ConversionRatesContract.abi.json'\nimport { validateAddress } from './validate.js'\nimport { assertOperator, assertAdmin } from './permission_assert.js'\n\n/**\n * CompactData is used to save gas on get, set rates operations.\n * Instead of sending the whole buy, sell rates every time, only the different\n * is sent if possible.\n * The compact rate is calculated by following formula:\n *\n *      compact = ((rate / base) - 1) * 1000\n */\nexport class CompactData {\n  get isBaseChanged () {\n    return this._isBaseChanged\n  }\n\n  set isBaseChanged (value) {\n    this._isBaseChanged = value\n  }\n\n  get compact () {\n    return this._compact\n  }\n\n  set compact (value) {\n    this._compact = value\n  }\n\n  get base () {\n    return this._base\n  }\n\n  set base (value) {\n    this._base = value\n  }\n\n  /**\n   * Create a new CompactData instance.\n   * @param {BigNumber} rate - the total rate\n   * @param {BigNumber} base - the base to generate compact data\n   */\n  constructor (rate, base) {\n    // const compactData = buildCompactData(rate, base)\n    const minInt8 = -128\n    const maxInt8 = 127\n\n    rate = new BigNumber(rate)\n    base = new BigNumber(base)\n\n    let compact\n\n    if (base.isEqualTo(0)) {\n      base = rate\n      this.isBaseChanged = true\n      compact = new BigNumber(0)\n    } else {\n      compact = rate\n        .dividedBy(base)\n        .minus(new BigNumber(1))\n        .multipliedBy(1000.0)\n        .integerValue()\n\n      // compact data is fit in a byte\n      if (\n        compact.isGreaterThanOrEqualTo(minInt8) &&\n        compact.isLessThanOrEqualTo(maxInt8)\n      ) {\n        // overflowed, convert from int8 to byte so\n        // * -1 --> 255\n        // * -128 --> 128\n        if (compact.isLessThan(0)) {\n          compact = new BigNumber(2 ** 8).plus(compact)\n        }\n      } else {\n        base = rate\n        this.isBaseChanged = true\n        compact = new BigNumber(0)\n      }\n    }\n\n    this._base = base\n    this._compact = compact\n  }\n}\n\n/**\n * Build the compact data input.\n * In ConversionRates contract, the compact data is stored in two dimensions\n * array with location:\n *   - bulkIndex\n *   - indexInBulk\n *\n * When setting compact data, user needs to submit the whole bulk along with\n * its index.\n *\n * @param newBuys - buy compact data\n * @param newSells - sell compact data\n * @param indices - map of address to its bulk index\n * @return {{buyResults: Array, sellResults: Array, indexResults: Array}}\n */\nexport const buildCompactBulk = (newBuys, newSells, indices) => {\n  let buyResults = []\n  let sellResults = []\n  let indexResults = []\n  let buyBulks = {}\n  let sellBulks = {}\n\n  for (let addr in newBuys) {\n    if (newBuys.hasOwnProperty(addr)) {\n      const loc = indices[addr]\n      if (!(loc.bulkIndex in buyBulks)) {\n        buyBulks[loc.bulkIndex] = new Array(14).fill(0)\n        sellBulks[loc.bulkIndex] = new Array(14).fill(0)\n      }\n      buyBulks[loc.bulkIndex][loc.indexInBulk] = newBuys[addr]\n      sellBulks[loc.bulkIndex][loc.indexInBulk] = newSells[addr]\n    }\n  }\n\n  for (let i in buyBulks) {\n    if (buyBulks.hasOwnProperty(i)) {\n      buyResults.push(buyBulks[i])\n      sellResults.push(sellBulks[i])\n      indexResults.push(i)\n    }\n  }\n  return { buyResults, sellResults, indexResults }\n}\n\n/**\n * TokenControlInfo is the configurations of a ERC20 token.\n */\nexport class TokenControlInfo {\n  get maxTotalImbalance () {\n    return this._maxTotalImbalance\n  }\n\n  set maxTotalImbalance (value) {\n    this._maxTotalImbalance = value\n  }\n\n  get maxPerBlockImbalance () {\n    return this._maxPerBlockImbalance\n  }\n\n  set maxPerBlockImbalance (value) {\n    this._maxPerBlockImbalance = value\n  }\n\n  get minimalRecordResolution () {\n    return this._minimalRecordResolution\n  }\n\n  set minimalRecordResolution (value) {\n    this._minimalRecordResolution = value\n  }\n\n  /**\n   * Create a new TokenControlInfo instance.\n   * @param minimalRecordResolution {uint} - minimum denominator in token wei that can be changed\n   * @param maxPerBlockImbalance {uint} - maximum wei amount of net absolute (+/-) change for a token in an ethereum\n   * block\n   * @param maxTotalImbalance {uint} - wei amount of the maximum net token change allowable that happens between 2\n   * price updates\n   */\n  constructor (\n    minimalRecordResolution,\n    maxPerBlockImbalance,\n    maxTotalImbalance\n  ) {\n    this._minimalRecordResolution = minimalRecordResolution\n    this._maxPerBlockImbalance = maxPerBlockImbalance\n    this._maxTotalImbalance = maxTotalImbalance\n  }\n}\n\n// StepFunctionDataPoint is the data point of a step function.\nexport class StepFunctionDataPoint {\n  get y () {\n    return this._y\n  }\n\n  set y (value) {\n    this._y = value\n  }\n\n  get x () {\n    return this._x\n  }\n\n  set x (value) {\n    this._x = value\n  }\n\n  /**\n   * Create a new StepFunctionDataPoint.\n   * @param x {int} - buy step in wei amount\n   * @param y {int} - impact on buy rate in basis points (bps). 1 bps = 0.01%\n   */\n  constructor (x, y) {\n    this._x = x\n    this._y = y\n  }\n}\n\n/**\n * RateSetting represents the buy sell rates of a ERC20 token.\n */\nexport class RateSetting {\n  get sell () {\n    return this._sell\n  }\n\n  set sell (value) {\n    this._sell = value\n  }\n\n  get buy () {\n    return this._buy\n  }\n\n  set buy (value) {\n    this._buy = value\n  }\n\n  get address () {\n    return this._address\n  }\n\n  set address (value) {\n    this._address = value\n  }\n\n  /**\n   * Create a new RateSetting instance.\n   * @param {string} address - ERC20 token address\n   * @param {number} buy - buy rate per ETH\n   * @param {number} sell - sell rate per ETH\n   */\n  constructor (address, buy, sell) {\n    validateAddress(address)\n\n    this._address = address\n    this._buy = buy\n    this._sell = sell\n    // this._buy = Web3.utils.padLeft(Web3.utils.numberToHex(buy), 14)\n    // this._sell = Web3.utils.padLeft(Web3.utils.numberToHex(sell), 14)\n  }\n}\n\n/**\n * CompactDataLocation is the location of compact data of a token in\n * ConversionRates contract. When adding a new token, ConversionRatesContract\n * allocated a fixed location in compact data array for it, this can't be\n * changed.\n */\nexport class CompactDataLocation {\n  get indexInBulk () {\n    return this._indexInBulk\n  }\n\n  set indexInBulk (value) {\n    this._indexInBulk = value\n  }\n\n  get bulkIndex () {\n    return this._bulkIndex\n  }\n\n  set bulkIndex (value) {\n    this._bulkIndex = value\n  }\n\n  constructor (bulkIndex, indexInBulk) {\n    this._bulkIndex = bulkIndex\n    this._indexInBulk = indexInBulk\n  }\n}\n\n/**\n * ConversionRatesContract represents the KyberNetwork conversion rates smart\n * contract.\n */\nexport default class ConversionRatesContract extends BaseContract {\n  /**\n   * Create new ConversionRatesContract instance.\n   * @param {object} provider - Web3 provider\n   * @param {string} address - address of smart contract.\n   */\n  constructor (web3, address) {\n    super(web3, address)\n    this.web3 = web3\n    this.contract = new this.web3.eth.Contract(conversionRatesABI, address)\n\n    /**\n     * getTokenIndices returns the index of given Token to use in setCompact\n     * data call.\n     * @param {string} token - ERC 20 token address\n     * @return {number} - index ot compact data\n     */\n    this.getTokenIndices = token => {\n      let tokenIndices = {}\n\n      return (async () => {\n        validateAddress(token)\n\n        if (token in tokenIndices) {\n          return tokenIndices[token]\n        }\n\n        let results\n        try {\n          results = await this.contract.methods.getCompactData(token).call()\n        } catch (err) {\n          console.log(\n            `failed to query token ${token} for compact data, error: ${err}`\n          )\n          return\n        }\n        tokenIndices[token] = new CompactDataLocation(results[0], results[1])\n        return tokenIndices[token]\n      })()\n    }\n  }\n\n  /**\n   * Add a ERC20 token and its pricing configurations to reserve contract and\n   * enable it for trading.\n   * @param {object} adminAccount - admin account address\n   * @param {string} token - ERC20 token address\n   * @param {TokenControlInfo} tokenControlInfo - https://developer.kyber.network/docs/VolumeImbalanceRecorder#settokencontrolinfo\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n\n  async addToken (adminAccount, token, tokenControlInfo, gasPrice) {\n    validateAddress(token)\n    await assertAdmin(this, adminAccount)\n    let addTokenTx = this.contract.methods.addToken(token)\n    await addTokenTx.send({\n      from: adminAccount,\n      gas: await addTokenTx.estimateGas({ from: adminAccount }),\n      gasPrice: gasPrice\n    })\n\n    console.log(\"Token Added...\")\n\n    var controlInfoTx = this.contract.methods.setTokenControlInfo(\n      token,\n      tokenControlInfo.minimalRecordResolution,\n      tokenControlInfo.maxPerBlockImbalance,\n      tokenControlInfo.maxTotalImbalance\n    )\n    await controlInfoTx.send({\n      from: adminAccount,\n      gas: await controlInfoTx.estimateGas({ from: adminAccount }),\n      gasPrice: gasPrice\n    })\n\n    console.log(\"Token Control Information Updated...\")\n\n    var enableTokenTx = this.contract.methods.enableTokenTrade(token)\n    await enableTokenTx.send({\n      from: adminAccount,\n      gas: await enableTokenTx.estimateGas({ from: adminAccount }),\n      gasPrice: gasPrice\n    })\n\n    console.log(\"Token Enabled...\")\n\n    return this.getTokenIndices(token)\n  }\n/**\n   * Add a ERC20 token and its pricing configurations to reserve contract and\n   * enable it for trading.\n   * @param {object} adminAccount - admin account address\n   * @param {string} token - ERC20 token address\n   * @param {TokenControlInfo} tokenControlInfo - https://developer.kyber.network/docs/VolumeImbalanceRecorder#settokencontrolinfo\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n  async updateTokenControlInfo (adminAccount, token, tokenControlInfo, gasPrice) {\n    validateAddress(token)\n    await assertAdmin(this, adminAccount)\n\n    var controlInfoTx = this.contract.methods.setTokenControlInfo(\n      token,\n      tokenControlInfo.minimalRecordResolution,\n      tokenControlInfo.maxPerBlockImbalance,\n      tokenControlInfo.maxTotalImbalance\n    )\n    await controlInfoTx.send({\n      from: adminAccount,\n      gas: await controlInfoTx.estimateGas({ from: adminAccount }),\n      gasPrice: gasPrice\n    })\n\n    console.log(\"Token Control Information Updated...\")\n\n    return this.getTokenIndices(token)\n  }\n\n\n  /**\n   * Set adjustments for tokens' buy and sell rates depending on the net traded\n   * amounts. Only operator can invoke.\n   * @param {object} operatorAddress - address of the operator account\n   * @param {string} token - ERC20 token address\n   * @param {StepFunctionDataPoint[]} buy - array of buy step function configurations\n   * @param {StepFunctionDataPoint[]} sell - array of sell step function configurations\n   * @param {number} [gasPrice=undefined] - the gasPrice desired for the tx\n   */\n  async setImbalanceStepFunction (\n    operatorAddress,\n    token,\n    buy,\n    sell,\n    gasPrice = undefined\n  ) {\n    validateAddress(token)\n    await assertOperator(this, operatorAddress)\n    const xBuy = buy.map(val => val.x)\n    const yBuy = buy.map(val => val.y)\n    const xSell = sell.map(val => val.x)\n    const ySell = sell.map(val => val.y)\n    if (yBuy > 0) {\n      console.warn(\n        `yBuy ${yBuy} is positive, which is contradicted to the logic of setImbalanceStepFunction`\n      )\n    }\n    if (ySell > 0) {\n      console.warn(\n        `ySell ${ySell} is positive, which is contradicted to the logic of setImbalanceStepFunction`\n      )\n    }\n    let tx = this.contract.methods.setImbalanceStepFunction(\n      token,\n      xBuy,\n      yBuy,\n      xSell,\n      ySell\n    )\n    return tx.send({\n      from: operatorAddress,\n      gas: await tx.estimateGas({ from: operatorAddress }),\n      gasPrice: gasPrice\n    })\n  }\n\n  /**\n   * Set adjustments for tokens' buy and sell rates depending on the size of a\n   * buy / sell order. Only operator can invoke.\n   * @param {object} operatorAddress - address of the operator account\n   * @param {string} token - ERC20 token address\n   * @param {StepFunctionDataPoint[]} buy - array of buy step function configurations\n   * @param {StepFunctionDataPoint[]} sell - array of sell step function configurations\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n  async setQtyStepFunction (operatorAddress, token, buy, sell, gasPrice) {\n    validateAddress(token)\n    await assertOperator(this, operatorAddress)\n    const xBuy = buy.map(val => val.x)\n    const yBuy = buy.map(val => val.y)\n    const xSell = sell.map(val => val.x)\n    const ySell = sell.map(val => val.y)\n    if (yBuy > 0) {\n      console.warn(\n        `yBuy ${yBuy} is positive, which is contradicted to the logic of setQtyStepFunction`\n      )\n    }\n    if (ySell > 0) {\n      console.warn(\n        `ySell ${ySell} is positive, which is contradicted to the logic of setQtyStepFunction`\n      )\n    }\n    let tx = this.contract.methods.setQtyStepFunction(\n      token,\n      xBuy,\n      yBuy,\n      xSell,\n      ySell\n    )\n\n    return tx.send({\n      from: operatorAddress,\n      gas: await tx.estimateGas({ from: operatorAddress }),\n      gasPrice: gasPrice\n    })\n  }\n\n  /**\n   * Return the buying ETH based rate. The rate might be vary with\n   * different quantity.\n   * @param {string} token - token address\n   * @param {number} qty - quantity of token\n   * @param {number} [currentBlockNumber=0] - current block number, default to\n   * use latest known block number.\n   * @return {number} - buy rate\n   */\n  getBuyRates (token, qty, currentBlockNumber = 0) {\n    return this.contract.methods\n      .getRate(token, currentBlockNumber, true, qty)\n      .call()\n  }\n\n  /**\n   * Return the buying ETH based rate. The rate might be vary with\n   * different quantity.\n   * @param {string} token - token address\n   * @param {number} qty - quantity of token\n   * @param {number} [currentBlockNumber=0] - current block number\n   * known block number.\n   */\n  getSellRates (token, qty, currentBlockNumber = 0) {\n    return this.contract.methods\n      .getRate(token, currentBlockNumber, false, qty)\n      .call()\n  }\n\n  /**\n   * Set the buying rate for given token.\n   * @param {object} operatorAddress - address of the operator account\n   * @param {RateSetting[]} rates - token address\n   * @param {number} [currentBlockNumber=0] - current block number\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n  async setRate (operatorAddress, rates, currentBlockNumber = 0, gasPrice) {\n    await assertOperator(this, operatorAddress)\n    const indices = await rates.reduce(async (acc, val) => {\n      const accumulator = await acc.then()\n      accumulator[val.address] = await this.getTokenIndices(val.address)\n      return Promise.resolve(accumulator)\n    }, Promise.resolve({}))\n\n    const data = await rates.reduce(\n      async (acc, val) => {\n        const accumulator = await acc.then()\n\n        const currentBaseBuy = await this.contract.methods\n          .getBasicRate(val.address, true)\n          .call()\n\n        const buyCompactData = new CompactData(val.buy, currentBaseBuy)\n\n        const currentBaseSell = await this.contract.methods\n          .getBasicRate(val.address, false)\n          .call()\n        const sellCompactData = new CompactData(val.sell, currentBaseSell)\n\n        if (buyCompactData.isBaseChanged || sellCompactData.isBaseChanged) {\n          accumulator.tokens.push(val.address)\n          accumulator.baseBuys.push(buyCompactData.base.toString())\n          accumulator.baseSells.push(sellCompactData.base.toString())\n        }\n        const buyCompact = buyCompactData.compact.toString()\n        accumulator.compactBuys[val.address] = buyCompact\n        const sellCompact = sellCompactData.compact.toString()\n        accumulator.compactSells[val.address] = sellCompact\n\n        return Promise.resolve(accumulator)\n      },\n      Promise.resolve({\n        tokens: [],\n        baseBuys: [],\n        baseSells: [],\n        compactBuys: {},\n        compactSells: {}\n      })\n    )\n\n    let compactInputs = buildCompactBulk(\n      data.compactBuys,\n      data.compactSells,\n      indices\n    )\n    compactInputs.buyResults = compactInputs.buyResults.map(val =>\n      Web3.utils.padLeft(Web3.utils.bytesToHex(val), 14)\n    )\n    compactInputs.sellResults = compactInputs.sellResults.map(val =>\n      Web3.utils.padLeft(Web3.utils.bytesToHex(val), 14)\n    )\n\n    let tx\n    if (data.tokens.length === 0) {\n      tx = this.contract.methods.setCompactData(\n        compactInputs.buyResults,\n        compactInputs.sellResults,\n        currentBlockNumber,\n        compactInputs.indexResults\n      )\n    } else {\n      tx = this.contract.methods.setBaseRate(\n        data.tokens,\n        data.baseBuys,\n        data.baseSells,\n        compactInputs.buyResults,\n        compactInputs.sellResults,\n        currentBlockNumber,\n        compactInputs.indexResults\n      )\n    }\n\n    const gas = await tx.estimateGas({ from: operatorAddress })\n    return tx.send({\n      from: operatorAddress,\n      gas,\n      gasPrice: gasPrice\n    })\n  }\n}\n",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/conversion_rates_contract.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "class",
    "name": "CompactData",
    "memberof": "src/conversion_rates_contract.js",
    "static": true,
    "longname": "src/conversion_rates_contract.js~CompactData",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/conversion_rates_contract.js",
    "importStyle": "{CompactData}",
    "description": "CompactData is used to save gas on get, set rates operations.\nInstead of sending the whole buy, sell rates every time, only the different\nis sent if possible.\nThe compact rate is calculated by following formula:\n\n     compact = ((rate / base) - 1) * 1000",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 86,
    "kind": "get",
    "name": "isBaseChanged",
    "memberof": "src/conversion_rates_contract.js~CompactData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactData#isBaseChanged",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "set",
    "name": "isBaseChanged",
    "memberof": "src/conversion_rates_contract.js~CompactData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactData#isBaseChanged",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "_isBaseChanged",
    "memberof": "src/conversion_rates_contract.js~CompactData",
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactData#_isBaseChanged",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "get",
    "name": "compact",
    "memberof": "src/conversion_rates_contract.js~CompactData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactData#compact",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "set",
    "name": "compact",
    "memberof": "src/conversion_rates_contract.js~CompactData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactData#compact",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "_compact",
    "memberof": "src/conversion_rates_contract.js~CompactData",
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactData#_compact",
    "access": "private",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "get",
    "name": "base",
    "memberof": "src/conversion_rates_contract.js~CompactData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactData#base",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "set",
    "name": "base",
    "memberof": "src/conversion_rates_contract.js~CompactData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactData#base",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "_base",
    "memberof": "src/conversion_rates_contract.js~CompactData",
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactData#_base",
    "access": "private",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/conversion_rates_contract.js~CompactData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactData#constructor",
    "access": "public",
    "description": "Create a new CompactData instance.",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "BigNumber"
        ],
        "spread": false,
        "optional": false,
        "name": "rate",
        "description": "the total rate"
      },
      {
        "nullable": null,
        "types": [
          "BigNumber"
        ],
        "spread": false,
        "optional": false,
        "name": "base",
        "description": "the base to generate compact data"
      }
    ]
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "buildCompactBulk",
    "memberof": "src/conversion_rates_contract.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/conversion_rates_contract.js~buildCompactBulk",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/conversion_rates_contract.js",
    "importStyle": "{buildCompactBulk}",
    "description": "Build the compact data input.\nIn ConversionRates contract, the compact data is stored in two dimensions\narray with location:\n  - bulkIndex\n  - indexInBulk\n\nWhen setting compact data, user needs to submit the whole bulk along with\nits index.",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newBuys",
        "description": "buy compact data"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newSells",
        "description": "sell compact data"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "indices",
        "description": "map of address to its bulk index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{buyResults: Array, sellResults: Array, indexResults: Array}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 101,
    "kind": "class",
    "name": "TokenControlInfo",
    "memberof": "src/conversion_rates_contract.js",
    "static": true,
    "longname": "src/conversion_rates_contract.js~TokenControlInfo",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/conversion_rates_contract.js",
    "importStyle": "{TokenControlInfo}",
    "description": "TokenControlInfo is the configurations of a ERC20 token.",
    "lineNumber": 138,
    "interface": false
  },
  {
    "__docId__": 102,
    "kind": "get",
    "name": "maxTotalImbalance",
    "memberof": "src/conversion_rates_contract.js~TokenControlInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~TokenControlInfo#maxTotalImbalance",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "set",
    "name": "maxTotalImbalance",
    "memberof": "src/conversion_rates_contract.js~TokenControlInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~TokenControlInfo#maxTotalImbalance",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "_maxTotalImbalance",
    "memberof": "src/conversion_rates_contract.js~TokenControlInfo",
    "static": false,
    "longname": "src/conversion_rates_contract.js~TokenControlInfo#_maxTotalImbalance",
    "access": "private",
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "get",
    "name": "maxPerBlockImbalance",
    "memberof": "src/conversion_rates_contract.js~TokenControlInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~TokenControlInfo#maxPerBlockImbalance",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "set",
    "name": "maxPerBlockImbalance",
    "memberof": "src/conversion_rates_contract.js~TokenControlInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~TokenControlInfo#maxPerBlockImbalance",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "undocument": true
  },
  {
    "__docId__": 107,
    "kind": "member",
    "name": "_maxPerBlockImbalance",
    "memberof": "src/conversion_rates_contract.js~TokenControlInfo",
    "static": false,
    "longname": "src/conversion_rates_contract.js~TokenControlInfo#_maxPerBlockImbalance",
    "access": "private",
    "description": null,
    "lineNumber": 152,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "get",
    "name": "minimalRecordResolution",
    "memberof": "src/conversion_rates_contract.js~TokenControlInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~TokenControlInfo#minimalRecordResolution",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "set",
    "name": "minimalRecordResolution",
    "memberof": "src/conversion_rates_contract.js~TokenControlInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~TokenControlInfo#minimalRecordResolution",
    "access": "public",
    "description": null,
    "lineNumber": 159,
    "undocument": true
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "_minimalRecordResolution",
    "memberof": "src/conversion_rates_contract.js~TokenControlInfo",
    "static": false,
    "longname": "src/conversion_rates_contract.js~TokenControlInfo#_minimalRecordResolution",
    "access": "private",
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/conversion_rates_contract.js~TokenControlInfo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~TokenControlInfo#constructor",
    "access": "public",
    "description": "Create a new TokenControlInfo instance.",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "minimalRecordResolution",
        "description": "{uint} - minimum denominator in token wei that can be changed"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "maxPerBlockImbalance",
        "description": "{uint} - maximum wei amount of net absolute (+/-) change for a token in an ethereum\nblock"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "maxTotalImbalance",
        "description": "{uint} - wei amount of the maximum net token change allowable that happens between 2\nprice updates"
      }
    ]
  },
  {
    "__docId__": 115,
    "kind": "class",
    "name": "StepFunctionDataPoint",
    "memberof": "src/conversion_rates_contract.js",
    "static": true,
    "longname": "src/conversion_rates_contract.js~StepFunctionDataPoint",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/conversion_rates_contract.js",
    "importStyle": "{StepFunctionDataPoint}",
    "description": null,
    "lineNumber": 183,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 116,
    "kind": "get",
    "name": "y",
    "memberof": "src/conversion_rates_contract.js~StepFunctionDataPoint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~StepFunctionDataPoint#y",
    "access": "public",
    "description": null,
    "lineNumber": 184,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "set",
    "name": "y",
    "memberof": "src/conversion_rates_contract.js~StepFunctionDataPoint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~StepFunctionDataPoint#y",
    "access": "public",
    "description": null,
    "lineNumber": 188,
    "undocument": true
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "_y",
    "memberof": "src/conversion_rates_contract.js~StepFunctionDataPoint",
    "static": false,
    "longname": "src/conversion_rates_contract.js~StepFunctionDataPoint#_y",
    "access": "private",
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "get",
    "name": "x",
    "memberof": "src/conversion_rates_contract.js~StepFunctionDataPoint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~StepFunctionDataPoint#x",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "set",
    "name": "x",
    "memberof": "src/conversion_rates_contract.js~StepFunctionDataPoint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~StepFunctionDataPoint#x",
    "access": "public",
    "description": null,
    "lineNumber": 196,
    "undocument": true
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "_x",
    "memberof": "src/conversion_rates_contract.js~StepFunctionDataPoint",
    "static": false,
    "longname": "src/conversion_rates_contract.js~StepFunctionDataPoint#_x",
    "access": "private",
    "description": null,
    "lineNumber": 197,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/conversion_rates_contract.js~StepFunctionDataPoint",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~StepFunctionDataPoint#constructor",
    "access": "public",
    "description": "Create a new StepFunctionDataPoint.",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "{int} - buy step in wei amount"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "{int} - impact on buy rate in basis points (bps). 1 bps = 0.01%"
      }
    ]
  },
  {
    "__docId__": 125,
    "kind": "class",
    "name": "RateSetting",
    "memberof": "src/conversion_rates_contract.js",
    "static": true,
    "longname": "src/conversion_rates_contract.js~RateSetting",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/conversion_rates_contract.js",
    "importStyle": "{RateSetting}",
    "description": "RateSetting represents the buy sell rates of a ERC20 token.",
    "lineNumber": 214,
    "interface": false
  },
  {
    "__docId__": 126,
    "kind": "get",
    "name": "sell",
    "memberof": "src/conversion_rates_contract.js~RateSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~RateSetting#sell",
    "access": "public",
    "description": null,
    "lineNumber": 215,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "set",
    "name": "sell",
    "memberof": "src/conversion_rates_contract.js~RateSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~RateSetting#sell",
    "access": "public",
    "description": null,
    "lineNumber": 219,
    "undocument": true
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "_sell",
    "memberof": "src/conversion_rates_contract.js~RateSetting",
    "static": false,
    "longname": "src/conversion_rates_contract.js~RateSetting#_sell",
    "access": "private",
    "description": null,
    "lineNumber": 220,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "get",
    "name": "buy",
    "memberof": "src/conversion_rates_contract.js~RateSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~RateSetting#buy",
    "access": "public",
    "description": null,
    "lineNumber": 223,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "set",
    "name": "buy",
    "memberof": "src/conversion_rates_contract.js~RateSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~RateSetting#buy",
    "access": "public",
    "description": null,
    "lineNumber": 227,
    "undocument": true
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "_buy",
    "memberof": "src/conversion_rates_contract.js~RateSetting",
    "static": false,
    "longname": "src/conversion_rates_contract.js~RateSetting#_buy",
    "access": "private",
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "get",
    "name": "address",
    "memberof": "src/conversion_rates_contract.js~RateSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~RateSetting#address",
    "access": "public",
    "description": null,
    "lineNumber": 231,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "set",
    "name": "address",
    "memberof": "src/conversion_rates_contract.js~RateSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~RateSetting#address",
    "access": "public",
    "description": null,
    "lineNumber": 235,
    "undocument": true
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "_address",
    "memberof": "src/conversion_rates_contract.js~RateSetting",
    "static": false,
    "longname": "src/conversion_rates_contract.js~RateSetting#_address",
    "access": "private",
    "description": null,
    "lineNumber": 236,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/conversion_rates_contract.js~RateSetting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~RateSetting#constructor",
    "access": "public",
    "description": "Create a new RateSetting instance.",
    "lineNumber": 245,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "ERC20 token address"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "buy",
        "description": "buy rate per ETH"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "sell",
        "description": "sell rate per ETH"
      }
    ]
  },
  {
    "__docId__": 139,
    "kind": "class",
    "name": "CompactDataLocation",
    "memberof": "src/conversion_rates_contract.js",
    "static": true,
    "longname": "src/conversion_rates_contract.js~CompactDataLocation",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/conversion_rates_contract.js",
    "importStyle": "{CompactDataLocation}",
    "description": "CompactDataLocation is the location of compact data of a token in\nConversionRates contract. When adding a new token, ConversionRatesContract\nallocated a fixed location in compact data array for it, this can't be\nchanged.",
    "lineNumber": 262,
    "interface": false
  },
  {
    "__docId__": 140,
    "kind": "get",
    "name": "indexInBulk",
    "memberof": "src/conversion_rates_contract.js~CompactDataLocation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactDataLocation#indexInBulk",
    "access": "public",
    "description": null,
    "lineNumber": 263,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "set",
    "name": "indexInBulk",
    "memberof": "src/conversion_rates_contract.js~CompactDataLocation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactDataLocation#indexInBulk",
    "access": "public",
    "description": null,
    "lineNumber": 267,
    "undocument": true
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "_indexInBulk",
    "memberof": "src/conversion_rates_contract.js~CompactDataLocation",
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactDataLocation#_indexInBulk",
    "access": "private",
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "get",
    "name": "bulkIndex",
    "memberof": "src/conversion_rates_contract.js~CompactDataLocation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactDataLocation#bulkIndex",
    "access": "public",
    "description": null,
    "lineNumber": 271,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "set",
    "name": "bulkIndex",
    "memberof": "src/conversion_rates_contract.js~CompactDataLocation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactDataLocation#bulkIndex",
    "access": "public",
    "description": null,
    "lineNumber": 275,
    "undocument": true
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "_bulkIndex",
    "memberof": "src/conversion_rates_contract.js~CompactDataLocation",
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactDataLocation#_bulkIndex",
    "access": "private",
    "description": null,
    "lineNumber": 276,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/conversion_rates_contract.js~CompactDataLocation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~CompactDataLocation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 279,
    "undocument": true
  },
  {
    "__docId__": 149,
    "kind": "class",
    "name": "ConversionRatesContract",
    "memberof": "src/conversion_rates_contract.js",
    "static": true,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/conversion_rates_contract.js",
    "importStyle": "ConversionRatesContract",
    "description": "ConversionRatesContract represents the KyberNetwork conversion rates smart\ncontract.",
    "lineNumber": 289,
    "interface": false,
    "extends": [
      "src/base_contract.js~BaseContract"
    ]
  },
  {
    "__docId__": 150,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/conversion_rates_contract.js~ConversionRatesContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract#constructor",
    "access": "public",
    "description": "Create new ConversionRatesContract instance.",
    "lineNumber": 295,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "provider",
        "description": "Web3 provider"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "address of smart contract."
      }
    ]
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "web3",
    "memberof": "src/conversion_rates_contract.js~ConversionRatesContract",
    "static": false,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract#web3",
    "access": "public",
    "description": null,
    "lineNumber": 297,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "contract",
    "memberof": "src/conversion_rates_contract.js~ConversionRatesContract",
    "static": false,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract#contract",
    "access": "public",
    "description": null,
    "lineNumber": 298,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "getTokenIndices",
    "memberof": "src/conversion_rates_contract.js~ConversionRatesContract",
    "static": false,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract#getTokenIndices",
    "access": "public",
    "description": "getTokenIndices returns the index of given Token to use in setCompact\ndata call.",
    "lineNumber": 306,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "ERC 20 token address"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "index ot compact data"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "addToken",
    "memberof": "src/conversion_rates_contract.js~ConversionRatesContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract#addToken",
    "access": "public",
    "description": "Add a ERC20 token and its pricing configurations to reserve contract and\nenable it for trading.",
    "lineNumber": 340,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAccount",
        "description": "admin account address"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "ERC20 token address"
      },
      {
        "nullable": null,
        "types": [
          "TokenControlInfo"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenControlInfo",
        "description": "https://developer.kyber.network/docs/VolumeImbalanceRecorder#settokencontrolinfo"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "updateTokenControlInfo",
    "memberof": "src/conversion_rates_contract.js~ConversionRatesContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract#updateTokenControlInfo",
    "access": "public",
    "description": "Add a ERC20 token and its pricing configurations to reserve contract and\nenable it for trading.",
    "lineNumber": 385,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAccount",
        "description": "admin account address"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "ERC20 token address"
      },
      {
        "nullable": null,
        "types": [
          "TokenControlInfo"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenControlInfo",
        "description": "https://developer.kyber.network/docs/VolumeImbalanceRecorder#settokencontrolinfo"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "setImbalanceStepFunction",
    "memberof": "src/conversion_rates_contract.js~ConversionRatesContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract#setImbalanceStepFunction",
    "access": "public",
    "description": "Set adjustments for tokens' buy and sell rates depending on the net traded\namounts. Only operator can invoke.",
    "lineNumber": 416,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "operatorAddress",
        "description": "address of the operator account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "ERC20 token address"
      },
      {
        "nullable": null,
        "types": [
          "StepFunctionDataPoint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "buy",
        "description": "array of buy step function configurations"
      },
      {
        "nullable": null,
        "types": [
          "StepFunctionDataPoint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "sell",
        "description": "array of sell step function configurations"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "gasPrice",
        "description": "the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "setQtyStepFunction",
    "memberof": "src/conversion_rates_contract.js~ConversionRatesContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract#setQtyStepFunction",
    "access": "public",
    "description": "Set adjustments for tokens' buy and sell rates depending on the size of a\nbuy / sell order. Only operator can invoke.",
    "lineNumber": 462,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "operatorAddress",
        "description": "address of the operator account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "ERC20 token address"
      },
      {
        "nullable": null,
        "types": [
          "StepFunctionDataPoint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "buy",
        "description": "array of buy step function configurations"
      },
      {
        "nullable": null,
        "types": [
          "StepFunctionDataPoint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "sell",
        "description": "array of sell step function configurations"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "getBuyRates",
    "memberof": "src/conversion_rates_contract.js~ConversionRatesContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract#getBuyRates",
    "access": "public",
    "description": "Return the buying ETH based rate. The rate might be vary with\ndifferent quantity.",
    "lineNumber": 503,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "token address"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "qty",
        "description": "quantity of token"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "currentBlockNumber",
        "description": "current block number, default to\nuse latest known block number."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "buy rate"
    }
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "getSellRates",
    "memberof": "src/conversion_rates_contract.js~ConversionRatesContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract#getSellRates",
    "access": "public",
    "description": "Return the buying ETH based rate. The rate might be vary with\ndifferent quantity.",
    "lineNumber": 517,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "token address"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "qty",
        "description": "quantity of token"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "currentBlockNumber",
        "description": "current block number\nknown block number."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "setRate",
    "memberof": "src/conversion_rates_contract.js~ConversionRatesContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/conversion_rates_contract.js~ConversionRatesContract#setRate",
    "access": "public",
    "description": "Set the buying rate for given token.",
    "lineNumber": 530,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "operatorAddress",
        "description": "address of the operator account"
      },
      {
        "nullable": null,
        "types": [
          "RateSetting[]"
        ],
        "spread": false,
        "optional": false,
        "name": "rates",
        "description": "token address"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "currentBlockNumber",
        "description": "current block number"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "file",
    "name": "src/deployer.js",
    "content": "import Web3 from 'web3'\n\nimport Addresses from './addresses.js'\nimport conversionRatesByteCode from './contracts/ConversionRatesContract.js'\nimport conversionRatesABI from '../abi/ConversionRatesContract.abi.json'\nimport kyberReserveContractABI from '../abi/KyberReserveContract.abi.json'\nimport kyberReserveContractByteCode from './contracts/KyberReserveContract.js'\nimport sanityRatesContractABI from '../abi/SanityRatesContract.abi.json'\nimport sanityRatesContractByteCode from './contracts/SanityRatesContract.js'\n\n/**\n * KyberNetworkAddress is the smart contract address of KyberNetwork.</br>\n * *Last updated*: 2018, August 31\n * @type {string}\n */\nexport const KyberNetworkAddress = '0x91a502C678605fbCe581eae053319747482276b9'\n\n/**\n * Deployer is used for deploying new KyberNetwork reserve contracts.\n * It deployed all requires smart contracts for running a reserve:\n * <ul>\n *   <li>reserve</li>\n *   <li>conversionRates</li>\n *   <li>sanityRates (optional)</li>\n * </ul>\n */\nexport default class Deployer {\n  /**\n   * Create a deployer instance with given account parameter.\n   * @param {object} web3 - Web3 instance\n   */\n  constructor (web3) {\n    if (web3.currentProvider == null) {\n      throw new Error('web3 is not provided')\n    }\n    this.web3 = web3\n  }\n\n  /**\n   * Deploy new reserve and pricing contracts.\n   * @param {object} adminAddress - Web3 account to create the smart contracts. This account is also set to be admin of the contracts\n   * @param {string} [network] - Address of KyberNetwork smart contract.\n   * @param {boolean} [sanityRates=false] - If true, sanityRates contract will be deployed.\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   * @return {Addresses} - Deployed reserve addresses set.\n   */\n  async deploy (\n    adminAddress,\n    network,\n    sanityRates = false,\n    gasPrice\n  ) {\n    if (!adminAddress) {\n      throw new Error('missing admin address')\n    }\n    if (!network) {\n      throw new Error('missing network address')\n    }\n\n    const deployContract = async (adminAddress, jsonInterface, byteCode, args) => {\n      const dpl = new this.web3.eth.Contract(jsonInterface).deploy({\n        data: `0x${byteCode}`,\n        arguments: args\n      })\n      return dpl.send({\n        from: adminAddress,\n        gas: await dpl.estimateGas({\n          from: adminAddress\n        }),\n        gasPrice: gasPrice\n      })\n    }\n\n    const deployConversionRates = adminAddress => {\n      console.log(\n        'Deploying conversion ... This might take a while for the tx to be mined'\n      )\n      return deployContract(\n        adminAddress,\n        conversionRatesABI,\n        conversionRatesByteCode,\n        [adminAddress]\n      )\n    }\n\n    const deployReserve = (adminAddress, network, conversionAddress) => {\n      console.log(\n        'Deploying reserve ... This might take a while for the tx to be mined'\n      )\n      const args = [network, conversionAddress, adminAddress]\n      return deployContract(\n        adminAddress,\n        kyberReserveContractABI,\n        kyberReserveContractByteCode,\n        args\n      )\n    }\n\n    const deploySanityRates = adminAddress => {\n      console.log(\n        'Deploying sanity ...This might take a while for the tx to be mined'\n      )\n\n      return deployContract(\n        adminAddress,\n        sanityRatesContractABI,\n        sanityRatesContractByteCode,\n        [adminAddress]\n      )\n    }\n\n    // All the contract must be deployed sequentially\n    const conversionRatesContract = await deployConversionRates(adminAddress)\n    const reserveContract = await deployReserve(\n      adminAddress,\n      network,\n      conversionRatesContract.options.address\n    )\n    let sanityRatesContract\n    if (sanityRates) {\n      sanityRatesContract = await deploySanityRates(adminAddress)\n    }\n\n    const setReserveAddressForConversionRates = async (\n      conversionRatesContract,\n      reserveAddress\n    ) => {\n      console.log('linking reserveContractAddress to conversionRateContract...')\n      const setReserveAddressTx = await conversionRatesContract.methods.setReserveAddress(\n        reserveAddress\n      )\n      return setReserveAddressTx.send({\n        from: adminAddress,\n        gas: await setReserveAddressTx.estimateGas({\n          from: adminAddress\n        }),\n        gasPrice: gasPrice\n      })\n    }\n\n    const setReserveAddressTxResult = await setReserveAddressForConversionRates(\n      conversionRatesContract,\n      reserveContract.options.address\n    )\n    console.log(\n      'setReserveAddressTx: ',\n      setReserveAddressTxResult.transactionHash\n    )\n\n    const setContractAddressesForReserve = async (\n      reserveContract,\n      networkAddress,\n      rateAddress,\n      sanityAddress\n    ) => {\n      console.log(\n        'linking network, rate and sanity contract address to reserveContract...'\n      )\n      const setContractsTx = await reserveContract.methods.setContracts(\n        networkAddress,\n        rateAddress,\n        sanityAddress\n      )\n      return setContractsTx.send({\n        from: adminAddress,\n        gas: await setContractsTx.estimateGas({\n          from: adminAddress\n        }),\n        gasPrice: gasPrice\n      })\n    }\n    const setContractAddressesTxResult = await setContractAddressesForReserve(\n      reserveContract,\n      network,\n      conversionRatesContract.options.address,\n      !sanityRatesContract\n        ? '0x0000000000000000000000000000000000000000'\n        : sanityRatesContract.options.address\n    )\n    console.log(\n      'setContractAddressesTx: ',\n      setContractAddressesTxResult.transactionHash\n    )\n\n    return new Addresses(\n      reserveContract.options.address,\n      conversionRatesContract.options.address,\n      !sanityRatesContract ? undefined : sanityRatesContract.options.address\n    )\n  }\n  async deploySanityRates (\n    adminAddress,\n    gasPrice\n  ) {\n    if (!adminAddress) {\n      throw new Error('missing admin address')\n    }\n\n    const deployContract = async (adminAddress, jsonInterface, byteCode, args) => {\n      const dpl = new this.web3.eth.Contract(jsonInterface).deploy({\n        data: `0x${byteCode}`,\n        arguments: args\n      })\n      return dpl.send({\n        from: adminAddress,\n        gas: await dpl.estimateGas({\n          from: adminAddress\n        }),\n        gasPrice: gasPrice\n      })\n    }\n\n    const deploySanityRates = adminAddress => {\n      console.log(\n        'Deploying sanity ...This might take a while for the tx to be mined'\n      )\n\n      return deployContract(\n        adminAddress,\n        sanityRatesContractABI,\n        sanityRatesContractByteCode,\n        [adminAddress]\n      )\n    }\n\n    let sanityRatesContract = await deploySanityRates(adminAddress)\n    return sanityRatesContract.options.address\n    \n  }\n}",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/deployer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 162,
    "kind": "variable",
    "name": "KyberNetworkAddress",
    "memberof": "src/deployer.js",
    "static": true,
    "longname": "src/deployer.js~KyberNetworkAddress",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/deployer.js",
    "importStyle": "{KyberNetworkAddress}",
    "description": "KyberNetworkAddress is the smart contract address of KyberNetwork.</br>\n*Last updated*: 2018, August 31",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "class",
    "name": "Deployer",
    "memberof": "src/deployer.js",
    "static": true,
    "longname": "src/deployer.js~Deployer",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/deployer.js",
    "importStyle": "Deployer",
    "description": "Deployer is used for deploying new KyberNetwork reserve contracts.\nIt deployed all requires smart contracts for running a reserve:\n<ul>\n  <li>reserve</li>\n  <li>conversionRates</li>\n  <li>sanityRates (optional)</li>\n</ul>",
    "lineNumber": 27,
    "interface": false
  },
  {
    "__docId__": 164,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/deployer.js~Deployer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/deployer.js~Deployer#constructor",
    "access": "public",
    "description": "Create a deployer instance with given account parameter.",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "web3",
        "description": "Web3 instance"
      }
    ]
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "web3",
    "memberof": "src/deployer.js~Deployer",
    "static": false,
    "longname": "src/deployer.js~Deployer#web3",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "deploy",
    "memberof": "src/deployer.js~Deployer",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/deployer.js~Deployer#deploy",
    "access": "public",
    "description": "Deploy new reserve and pricing contracts.",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "Web3 account to create the smart contracts. This account is also set to be admin of the contracts"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "network",
        "description": "Address of KyberNetwork smart contract."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "sanityRates",
        "description": "If true, sanityRates contract will be deployed."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Addresses"
      ],
      "spread": false,
      "description": "Deployed reserve addresses set."
    }
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "deploySanityRates",
    "memberof": "src/deployer.js~Deployer",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/deployer.js~Deployer#deploySanityRates",
    "access": "public",
    "description": null,
    "lineNumber": 191,
    "undocument": true,
    "params": [
      {
        "name": "adminAddress",
        "types": [
          "*"
        ]
      },
      {
        "name": "gasPrice",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "src/index.js",
    "content": "import 'babel-polyfill'\n\nexport { default as Deployer } from './deployer.js'\nexport { default as BaseContract } from './base_contract.js'\nexport { default as ConversionRatesContract , CompactData as CompactData,\n        TokenControlInfo as TokenControlInfo , StepFunctionDataPoint as StepFunctionDataPoint ,\n        RateSetting as RateSetting, CompactDataLocation as CompactDataLocation\n        } from './conversion_rates_contract.js'\n//export * from './conversion_rates_contract.js'\nexport { default as ReserveContract } from './reserve_contract.js'\nexport { default as SanityRatesContract } from './sanity_rates_contract.js'\n\nexport { default as Reserve } from './reserve.js'\n",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "file",
    "name": "src/permission_assert.js",
    "content": "export const assertOperator = async (contract, address) => {\n  const operators = await contract.getOperators()\n  for (let idx in operators) {\n    if (operators.hasOwnProperty(idx)) {\n      if (operators[idx].toLowerCase() === address.toLowerCase()) {\n        return\n      }\n    }\n  }\n\n  throw new Error(`not operator address: '${address}'`)\n}\n\nexport const assertAlerter = async (contract, address) => {\n  const alerters = await contract.getAlerters()\n  for (let idx in alerters) {\n    if (alerters.hasOwnProperty(idx)) {\n      if (alerters[idx].toLowerCase() === address.toLowerCase()) {\n        return\n      }\n    }\n  }\n\n  throw new Error(`not alerter address: '${address}'`)\n}\n\nexport const assertAdmin = async (contract, address) => {\n  const admin = await contract.admin()\n  if (admin.toLowerCase() !== address.toLowerCase()) {\n    throw new Error(`not alerter address address: '${address}'`)\n  }\n}\n",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/permission_assert.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "assertOperator",
    "memberof": "src/permission_assert.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/permission_assert.js~assertOperator",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/permission_assert.js",
    "importStyle": "{assertOperator}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "contract",
        "types": [
          "*"
        ]
      },
      {
        "name": "address",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "assertAlerter",
    "memberof": "src/permission_assert.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/permission_assert.js~assertAlerter",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/permission_assert.js",
    "importStyle": "{assertAlerter}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "contract",
        "types": [
          "*"
        ]
      },
      {
        "name": "address",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "assertAdmin",
    "memberof": "src/permission_assert.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/permission_assert.js~assertAdmin",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/permission_assert.js",
    "importStyle": "{assertAdmin}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "contract",
        "types": [
          "*"
        ]
      },
      {
        "name": "address",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "src/reserve.js",
    "content": "import ReserveContract from './reserve_contract.js'\nimport SanityRatesContract from './sanity_rates_contract.js'\nimport ConversionRatesContract from './conversion_rates_contract.js'\n\n/**\n * Reserve is the wrapper to call all methods related to\n * managing a reserve. It required a provider and the addresses of\n * reserve contract, conversionRates contract and optionally, SanityRates contract\n */\nexport default class Reserve {\n  /**\n   *\n   * @param {object} web3 - Web3 instance\n   * @param {Addresses} addresses - addresses of the contracts\n   */\n  constructor (web3, addresses) {\n    this.web3 = web3\n    this.reserve = new ReserveContract(\n      web3,\n      addresses.reserve\n    )\n    this.conversionRates = new ConversionRatesContract(\n      web3,\n      addresses.conversionRates\n    )\n    if (addresses.sanityRates) {\n      this.sanityRates = new SanityRatesContract(\n        web3,\n        addresses.sanityRates\n      )\n    }\n  }\n\n  /**\n   * enableTrade allow the reserve to continue trading\n   * @param {object} adminAddress - address of Admin account\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   * @return {object} - the tx object of send() command from this contract method\n   */\n  enableTrade (adminAddress, gasPrice) {\n    return this.reserve.enableTrade(adminAddress, gasPrice)\n  }\n  /**\n   * disableTrade stop the reserve from trading\n   * @param {object} alerterAddress - address of Alerter account\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   * @return {object} - the tx object of send() command from this contract method\n   */\n  disableTrade (alerterAddress, gasPrice) {\n    return this.reserve.disableTrade(alerterAddress, gasPrice)\n  }\n  /**\n   * tradeEnabled return true if the reserve is tradeEnabled, false otherwise\n   * @return {boolean} - tradeEnabled status of the reserve\n   */\n  tradeEnabled () {\n    return this.contract.methods.tradeEnabled().call()\n  }\n\n  /**\n   * set Contract addresses for reserve contract.\n   * @param {object} adminAddress - address of admin account.\n   * @param {string} network - address of kyber network smart contract.\n   * @param {string} conversion - address of kyber network smart contract.\n   * @param {string} sanity (optional) - address of sanity rates contract.\n   * @param {number} [gasPrice=undefined] - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  setContracts (adminAddress, network, conversion, sanity, gasPrice = undefined) {\n    return this.reserve.setContracts(\n      adminAddress,\n      network,\n      conversion,\n      sanity,\n      gasPrice\n    )\n  }\n\n  /**\n   * conversionRatesContract return the address of conversion rates of this reserve\n   * @return {string} - address of conversion rates contract\n   */\n  conversionRatesContract () {\n    return this.reserve.conversionRatesContract()\n  }\n\n  /**\n   * sanityRatesContract return the address of sanity rates of this reserve\n   * @return {string} - address of sanity rates contract\n   */\n  sanityRatesContract () {\n    return this.reserve.sanityRatesContract()\n  }\n  /**\n   * kyberNetwork return the address of kyberNetwork contract of this reserve\n   * @return {string} - address of kyberNetwork contract\n   */\n  kyberNetwork () {\n    return this.reserve.kyberNetwork()\n  }\n\n  /**\n   * approve withdraw address for a token on reserve.\n   * @param {object} adminAddress - address of admin account.\n   * @param {string} tokenAddress - contract address of the modifying token.\n   * @param {string} withdrawAddress - address for withdrawal.\n   * @param {number} [gasPrice=undefined] - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  approveWithdrawAddress (\n    adminAddress,\n    tokenAddress,\n    withdrawAddress,\n    gasPrice = undefined\n  ) {\n    return this.reserve.approveWithdrawAddress(\n      adminAddress,\n      tokenAddress,\n      withdrawAddress,\n      gasPrice\n    )\n  }\n\n  /**\n   * disapprove withdraw address for a token on reserve.\n   * @param {object} adminAddress - address of admin account.\n   * @param {string} tokenAddress - contract address of the modifying token.\n   * @param {string} withdrawAddress - address for withdrawal.\n   * @param {number} [gasPrice=undefined] - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  disapproveWithdrawAddress (\n    adminAddress,\n    tokenAddress,\n    withdrawAddress,\n    gasPrice = undefined\n  ) {\n    return this.reserve.disapproveWithdrawAddress(\n      adminAddress,\n      tokenAddress,\n      withdrawAddress,\n      gasPrice\n    )\n  }\n\n  /**\n   * check for approval status of a token address to a particular address\n   * @param {object} address - address to withdraw the token to\n   * @param {string} tokenAddress - address of the token's smart contract. Must be deployed already.\n   * @returns {boolean} - true for approved, false otherwise\n   */\n  approvedWithdrawAddresses (address, tokenAddress) {\n    return this.reserve.approvedWithdrawAddresses(address, tokenAddress)\n  }\n\n  /**\n   * withdraw an amount of token to specified account\n   * @param {object} adminAddress - address of admin account.\n   * @param {string} tokenAddress - address of the token's smart contract. Must be deployed already.\n   * @param {object} amount - amount to withdraw (BN|String|int), must be in wei.\n   * @param {string} toAddress - address for withdrawal. Must be approved already.\n   * @param {number} [gasPrice=undefined] - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  withdraw (adminAddress, tokenAddress, amount, toAddress, gasPrice = undefined) {\n    return this.reserve.withdraw(\n      adminAddress,\n      tokenAddress,\n      amount,\n      toAddress,\n      gasPrice\n    )\n  }\n\n  /**\n   * Return balance of given token.\n   * @param {string} token - address of token to check balance.\n   * @return {number} - balance of given token\n   */\n  getBalance (token) {\n    return this.reserve.getBalance(token)\n  }\n\n  /**\n   * Set Sanity Rate for the sanity Ratescontract\n   * @param {object} operatorAddress - address of operator account\n   * @param {string[]} srcs - list of source ERC20 token contract addresses\n   * @param {uint[]} rates - list of Rates in ETH weit\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  setSanityRates (operatorAddress, srcs, rates, gasPrice) {\n    if (!this.sanityRates) {\n      return undefined\n    }\n    return this.sanityRates.setSanityRates(operatorAddress, srcs, rates, gasPrice)\n  }\n\n  /**\n   * Return the sanity Rate of a pair of token\n   * @param {string} src - ERC20 token contract address of source token\n   * @param {string} dest - ERC20 token contract address of destination token\n   * @returns {string} - the uint rate in strings format.\n   */\n  getSanityRate (src, dest) {\n    if (!this.sanityRates) {\n      return undefined\n    }\n    return this.sanityRates.getSanityRate(src, dest)\n  }\n\n  /**\n   * resonableDiffInBps return the list of reasonableDiffs in basis points (bps)\n   * @param {string} address - ERC20 token contract address to query\n   * @returns {string} - the uint reasonable diff in string format.\n   */\n  reasonableDiffInBps (address) {\n    if (!this.sanityRates) {\n      return undefined\n    }\n    return this.sanityRates.reasonableDiffInBps(address)\n  }\n\n  /**\n   * setResonableDiff Set reasonable conversion rate difference in percentage (any conversion rate outside of this range is considered unreasonable).\n   * @param {object} adminAddress - address of admin account\n   * @param {string[]} addresses - list of ERC20 token contract to set\n   * @param {uint[]} diffs - list of diffs in bps (1 bps = 0.01%)\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  setReasonableDiff (adminAddress, addresses, diffs, gasPrice) {\n    if (!this.sanityRates) {\n      return undefined\n    }\n    return this.sanityRates.setReasonableDiff(\n      adminAddress,\n      addresses,\n      diffs,\n      gasPrice\n    )\n  }\n\n  /**\n   * Add a ERC20 token and its pricing configurations to reserve contract and\n   * enable it for trading.\n   * @param {object} adminccount - address of admin account\n   * @param {string} token - ERC20 token address\n   * @param {TokenControlInfo} tokenControlInfo - https://developer.kyber.network/docs/VolumeImbalanceRecorder#settokencontrolinfo\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n\n  addToken (adminAddress, token, tokenControlInfo, gasPrice) {\n    return this.conversionRates.addToken(\n      adminAddress,\n      token,\n      tokenControlInfo,\n      gasPrice\n    )\n  }\n/**\n   * Add tokenControlInfo\n   * @param {object} adminccount - address of admin account\n   * @param {string} token - ERC20 token address\n   * @param {TokenControlInfo} tokenControlInfo - https://developer.kyber.network/docs/VolumeImbalanceRecorder#settokencontrolinfo\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n\n  updateTokenControlInfo(adminAddress, token, tokenControlInfo, gasPrice) {\n    return this.conversionRates.updateTokenControlInfo(\n      adminAddress,\n      token,\n      tokenControlInfo,\n      gasPrice\n    )\n  }\n  /**\n   * set different token wallet per token.\n   * @param {object} adminAddress - address of admin account.\n   * @param {string} tokenAddress - address of the token's smart contract.\n   * @param {object} walletAddress - address of wallet in which tokens are present.\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n\n  setTokenWallet(adminAddress, tokenAddress, walletAddress, gasPrice) {\n    return this.reserve.setTokenWallet(\n      adminAddress,\n      tokenAddress,\n      walletAddress,\n      gasPrice\n    )\n  }\n  /**\n   * Set adjustments for tokens' buy and sell rates depending on the net traded\n   * amounts. Only operator can invoke.\n   * @param {object} operatorAddress - address of operator account\n   * @param {string} token - ERC20 token address\n   * @param {StepFunctionDataPoint[]} buy - array of buy step function configurations\n   * @param {StepFunctionDataPoint[]} sell - array of sell step function configurations\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n  setImbalanceStepFunction (operatorAddress, token, buy, sell, gasPrice) {\n    return this.conversionRates.setImbalanceStepFunction(\n      operatorAddress,\n      token,\n      buy,\n      sell,\n      gasPrice\n    )\n  }\n\n  /**\n   * Set adjustments for tokens' buy and sell rates depending on the size of a\n   * buy / sell order. Only operator can invoke.\n   * @param {object} operatorAddress - address of operator account\n   * @param {string} token - ERC20 token address\n   * @param {StepFunctionDataPoint[]} buy - array of buy step function configurations\n   * @param {StepFunctionDataPoint[]} sell - array of sell step function configurations\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n  setQtyStepFunction (operatorAddress, token, buy, sell, gasPrice) {\n    return this.conversionRates.setQtyStepFunction(\n      operatorAddress,\n      token,\n      buy,\n      sell,\n      gasPrice\n    )\n  }\n\n  /**\n   * Return the buying ETH based rate. The rate might be vary with\n   * different quantity.\n   * @param {string} token - token address\n   * @param {number} qty - quantity of token\n   * @param {number} [currentBlockNumber=0] - current block number, default to\n   * use latest known block number.\n   * @return {number} - buy rate\n   */\n  getBuyRates (token, qty, currentBlockNumber = 0) {\n    return this.conversionRates.getBuyRates(token, qty, currentBlockNumber)\n  }\n\n  /**\n   * Return the buying ETH based rate. The rate might be vary with\n   * different quantity.\n   * @param {string} token - token address\n   * @param {number} qty - quantity of token\n   * @param {number} [currentBlockNumber=0] - current block number\n   * known block number.\n   */\n  getSellRates (token, qty, currentBlockNumber = 0) {\n    return this.conversionRates.getSellRates(token, qty, currentBlockNumber)\n  }\n\n  /**\n   * Set the buying rate for given token.\n   * @param {object} operatorAddress - address of operator account\n   * @param {RateSetting[]} rates - token address\n   * @param {number} [currentBlockNumber=0] - current block number\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   */\n  setRate (operatorAddress, rates, currentBlockNumber = 0, gasPrice) {\n    return this.conversionRates.setRate(\n      operatorAddress,\n      rates,\n      currentBlockNumber,\n      gasPrice\n    )\n  }\n}\n",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/reserve.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "class",
    "name": "Reserve",
    "memberof": "src/reserve.js",
    "static": true,
    "longname": "src/reserve.js~Reserve",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/reserve.js",
    "importStyle": "Reserve",
    "description": "Reserve is the wrapper to call all methods related to\nmanaging a reserve. It required a provider and the addresses of\nreserve contract, conversionRates contract and optionally, SanityRates contract",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 175,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "web3",
        "description": "Web3 instance"
      },
      {
        "nullable": null,
        "types": [
          "Addresses"
        ],
        "spread": false,
        "optional": false,
        "name": "addresses",
        "description": "addresses of the contracts"
      }
    ]
  },
  {
    "__docId__": 176,
    "kind": "member",
    "name": "web3",
    "memberof": "src/reserve.js~Reserve",
    "static": false,
    "longname": "src/reserve.js~Reserve#web3",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "reserve",
    "memberof": "src/reserve.js~Reserve",
    "static": false,
    "longname": "src/reserve.js~Reserve#reserve",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "member",
    "name": "conversionRates",
    "memberof": "src/reserve.js~Reserve",
    "static": false,
    "longname": "src/reserve.js~Reserve#conversionRates",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "sanityRates",
    "memberof": "src/reserve.js~Reserve",
    "static": false,
    "longname": "src/reserve.js~Reserve#sanityRates",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "enableTrade",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#enableTrade",
    "access": "public",
    "description": "enableTrade allow the reserve to continue trading",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of Admin account"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "disableTrade",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#disableTrade",
    "access": "public",
    "description": "disableTrade stop the reserve from trading",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "alerterAddress",
        "description": "address of Alerter account"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "tradeEnabled",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#tradeEnabled",
    "access": "public",
    "description": "tradeEnabled return true if the reserve is tradeEnabled, false otherwise",
    "lineNumber": 56,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "tradeEnabled status of the reserve"
    },
    "params": []
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "setContracts",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#setContracts",
    "access": "public",
    "description": "set Contract addresses for reserve contract.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of admin account."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "network",
        "description": "address of kyber network smart contract."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "conversion",
        "description": "address of kyber network smart contract."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sanity",
        "description": "(optional) - address of sanity rates contract."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "gasPrice",
        "description": "the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "conversionRatesContract",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#conversionRatesContract",
    "access": "public",
    "description": "conversionRatesContract return the address of conversion rates of this reserve",
    "lineNumber": 83,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "address of conversion rates contract"
    },
    "params": []
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "sanityRatesContract",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#sanityRatesContract",
    "access": "public",
    "description": "sanityRatesContract return the address of sanity rates of this reserve",
    "lineNumber": 91,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "address of sanity rates contract"
    },
    "params": []
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "kyberNetwork",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#kyberNetwork",
    "access": "public",
    "description": "kyberNetwork return the address of kyberNetwork contract of this reserve",
    "lineNumber": 98,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "address of kyberNetwork contract"
    },
    "params": []
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "approveWithdrawAddress",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#approveWithdrawAddress",
    "access": "public",
    "description": "approve withdraw address for a token on reserve.",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of admin account."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenAddress",
        "description": "contract address of the modifying token."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "withdrawAddress",
        "description": "address for withdrawal."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "gasPrice",
        "description": "the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "disapproveWithdrawAddress",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#disapproveWithdrawAddress",
    "access": "public",
    "description": "disapprove withdraw address for a token on reserve.",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of admin account."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenAddress",
        "description": "contract address of the modifying token."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "withdrawAddress",
        "description": "address for withdrawal."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "gasPrice",
        "description": "the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "approvedWithdrawAddresses",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#approvedWithdrawAddresses",
    "access": "public",
    "description": "check for approval status of a token address to a particular address",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - true for approved, false otherwise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "address to withdraw the token to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenAddress",
        "description": "address of the token's smart contract. Must be deployed already."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true for approved, false otherwise"
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "withdraw",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#withdraw",
    "access": "public",
    "description": "withdraw an amount of token to specified account",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of admin account."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenAddress",
        "description": "address of the token's smart contract. Must be deployed already."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "amount to withdraw (BN|String|int), must be in wei."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "toAddress",
        "description": "address for withdrawal. Must be approved already."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "gasPrice",
        "description": "the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "getBalance",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#getBalance",
    "access": "public",
    "description": "Return balance of given token.",
    "lineNumber": 180,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "address of token to check balance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "balance of given token"
    }
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "setSanityRates",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#setSanityRates",
    "access": "public",
    "description": "Set Sanity Rate for the sanity Ratescontract",
    "lineNumber": 192,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "operatorAddress",
        "description": "address of operator account"
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "srcs",
        "description": "list of source ERC20 token contract addresses"
      },
      {
        "nullable": null,
        "types": [
          "uint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "rates",
        "description": "list of Rates in ETH weit"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "getSanityRate",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#getSanityRate",
    "access": "public",
    "description": "Return the sanity Rate of a pair of token",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - the uint rate in strings format."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "ERC20 token contract address of source token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dest",
        "description": "ERC20 token contract address of destination token"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the uint rate in strings format."
    }
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "reasonableDiffInBps",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#reasonableDiffInBps",
    "access": "public",
    "description": "resonableDiffInBps return the list of reasonableDiffs in basis points (bps)",
    "lineNumber": 217,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - the uint reasonable diff in string format."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "ERC20 token contract address to query"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the uint reasonable diff in string format."
    }
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "setReasonableDiff",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#setReasonableDiff",
    "access": "public",
    "description": "setResonableDiff Set reasonable conversion rate difference in percentage (any conversion rate outside of this range is considered unreasonable).",
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of admin account"
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "addresses",
        "description": "list of ERC20 token contract to set"
      },
      {
        "nullable": null,
        "types": [
          "uint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "diffs",
        "description": "list of diffs in bps (1 bps = 0.01%)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "addToken",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#addToken",
    "access": "public",
    "description": "Add a ERC20 token and its pricing configurations to reserve contract and\nenable it for trading.",
    "lineNumber": 254,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminccount",
        "description": "address of admin account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "ERC20 token address"
      },
      {
        "nullable": null,
        "types": [
          "TokenControlInfo"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenControlInfo",
        "description": "https://developer.kyber.network/docs/VolumeImbalanceRecorder#settokencontrolinfo"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "updateTokenControlInfo",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#updateTokenControlInfo",
    "access": "public",
    "description": "Add tokenControlInfo",
    "lineNumber": 271,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminccount",
        "description": "address of admin account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "ERC20 token address"
      },
      {
        "nullable": null,
        "types": [
          "TokenControlInfo"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenControlInfo",
        "description": "https://developer.kyber.network/docs/VolumeImbalanceRecorder#settokencontrolinfo"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "setTokenWallet",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#setTokenWallet",
    "access": "public",
    "description": "set different token wallet per token.",
    "lineNumber": 287,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of admin account."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenAddress",
        "description": "address of the token's smart contract."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "walletAddress",
        "description": "address of wallet in which tokens are present."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "setImbalanceStepFunction",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#setImbalanceStepFunction",
    "access": "public",
    "description": "Set adjustments for tokens' buy and sell rates depending on the net traded\namounts. Only operator can invoke.",
    "lineNumber": 304,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "operatorAddress",
        "description": "address of operator account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "ERC20 token address"
      },
      {
        "nullable": null,
        "types": [
          "StepFunctionDataPoint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "buy",
        "description": "array of buy step function configurations"
      },
      {
        "nullable": null,
        "types": [
          "StepFunctionDataPoint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "sell",
        "description": "array of sell step function configurations"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "setQtyStepFunction",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#setQtyStepFunction",
    "access": "public",
    "description": "Set adjustments for tokens' buy and sell rates depending on the size of a\nbuy / sell order. Only operator can invoke.",
    "lineNumber": 323,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "operatorAddress",
        "description": "address of operator account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "ERC20 token address"
      },
      {
        "nullable": null,
        "types": [
          "StepFunctionDataPoint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "buy",
        "description": "array of buy step function configurations"
      },
      {
        "nullable": null,
        "types": [
          "StepFunctionDataPoint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "sell",
        "description": "array of sell step function configurations"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "getBuyRates",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#getBuyRates",
    "access": "public",
    "description": "Return the buying ETH based rate. The rate might be vary with\ndifferent quantity.",
    "lineNumber": 342,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "token address"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "qty",
        "description": "quantity of token"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "currentBlockNumber",
        "description": "current block number, default to\nuse latest known block number."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "buy rate"
    }
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "getSellRates",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#getSellRates",
    "access": "public",
    "description": "Return the buying ETH based rate. The rate might be vary with\ndifferent quantity.",
    "lineNumber": 354,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "token address"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "qty",
        "description": "quantity of token"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "currentBlockNumber",
        "description": "current block number\nknown block number."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "setRate",
    "memberof": "src/reserve.js~Reserve",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve.js~Reserve#setRate",
    "access": "public",
    "description": "Set the buying rate for given token.",
    "lineNumber": 365,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "operatorAddress",
        "description": "address of operator account"
      },
      {
        "nullable": null,
        "types": [
          "RateSetting[]"
        ],
        "spread": false,
        "optional": false,
        "name": "rates",
        "description": "token address"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "currentBlockNumber",
        "description": "current block number"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "src/reserve_contract.js",
    "content": "import Web3 from 'web3'\n\nimport reserveContractABI from '../abi/KyberReserveContract.abi.json'\nimport BaseContract from './base_contract.js'\nimport { validateAddress } from './validate.js'\nimport { assertAdmin, assertAlerter, assertOperator } from './permission_assert.js'\n\n/**\n * ReserveContract contains extended methods for KyberReserveContract\n */\nexport default class ReserveContract extends BaseContract {\n  /**\n   * Create new BaseContract instance.\n   * @param {object} provider - Web3 provider\n   * @param {string} address - address of kyber reserve smart contract.\n   */\n  constructor (web3, address) {\n    super(web3, address)\n    this.web3 = web3\n    this.contract = new this.web3.eth.Contract(reserveContractABI, address)\n  }\n  /**\n   * enableTrade allow the reserve to continue trading\n   * @param {object} adminAddress - address of Admin account\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   * @return {object} - the tx object of send() command from this contract method\n   */\n  async enableTrade (adminAddress, gasPrice) {\n    await assertAdmin(this, adminAddress)\n    const med = this.contract.methods.enableTrade()\n    return this.contract.methods.enableTrade().send({\n      from: adminAddress,\n      gas: await med.estimateGas({\n        from: adminAddress\n      }),\n      gasPrice: gasPrice\n    })\n  }\n\n  /**\n   * disableTrade stop the reserve from trading\n   * @param {object} alerterAddress - address of Alerter account\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   * @return {object} - the tx object of send() command from this contract method\n   */\n  async disableTrade (alerterAddress, gasPrice) {\n    await assertAlerter(this, alerterAddress)\n    const med = this.contract.methods.disableTrade()\n    return med.send({\n      from: alerterAddress,\n      gas: await med.estimateGas({\n        from: alerterAddress\n      }),\n      gasPrice: gasPrice\n    })\n  }\n\n  /**\n   * tradeEnabled return true if the reserve is tradeEnabled, false otherwise\n   * @return {boolean} - tradeEnabled status of the reserve\n   */\n  tradeEnabled () {\n    return this.contract.methods.tradeEnabled().call()\n  }\n\n  /**\n   * set Contract addresses for reserve contract.\n   * @param {object} adminAddress - address of admin account.\n   * @param {string} network - address of kyber network smart contract.\n   * @param {string} conversion - address of kyber network smart contract.\n   * @param {string} sanity (optional) - address of sanity rates contract.\n   * @param {number} [gasPrice=undefined] - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  async setContracts (\n    adminAddress,\n    network,\n    conversion,\n    sanity,\n    gasPrice = undefined\n  ) {\n    validateAddress(network)\n    validateAddress(conversion)\n    await assertAdmin(this, adminAddress)\n    if (sanity !== undefined) {\n      validateAddress(sanity)\n    } else {\n      sanity = '0x0000000000000000000000000000000000000000'\n    }\n\n    const med = this.contract.methods.setContracts(network, conversion, sanity)\n    return med.send({\n      from: adminAddress,\n      gas: await med.estimateGas({\n        from: adminAddress\n      }),\n      gasPrice: gasPrice\n    })\n  }\n\n  /**\n   * conversionRatesContract return the address of conversion rates of this reserve\n   * @return {string} - address of conversion rates contract\n   */\n  conversionRatesContract () {\n    return this.contract.methods.conversionRatesContract().call()\n  }\n\n  /**\n   * sanityRatesContract return the address of sanity rates of this reserve\n   * @return {string} - address of sanity rates contract\n   */\n  sanityRatesContract () {\n    return this.contract.methods.sanityRatesContract().call()\n  }\n\n  /**\n   * kyberNetwork return the address of kyberNetwork contract of this reserve\n   * @return {string} - address of kyberNetwork contract\n   */\n  kyberNetwork () {\n    return this.contract.methods.kyberNetwork().call()\n  }\n\n  /**\n   * approve withdraw address for a token on reserve.\n   * @param {object} adminAddress - address of admin account.\n   * @param {string} tokenAddress - contract address of the modifying token.\n   * @param {string} withdrawAddress - address for withdrawal.\n   * @param {number} [gasPrice=undefined] - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  async approveWithdrawAddress (\n    adminAddress,\n    tokenAddress,\n    withdrawAddress,\n    gasPrice = undefined\n  ) {\n    await assertAdmin(this, adminAddress)\n    const med = this.contract.methods.approveWithdrawAddress(\n      tokenAddress,\n      withdrawAddress,\n      true\n    )\n    return med.send({\n      from: adminAddress,\n      gas: await med.estimateGas({\n        from: adminAddress\n      }),\n      gasPrice: gasPrice\n    })\n  }\n\n  /**\n   * disapprove withdraw address for a token on reserve.\n   * @param {object} adminAddress - address of admin account.\n   * @param {string} tokenAddress - contract address of the modifying token.\n   * @param {string} withdrawAddress - address for withdrawal.\n   * @param {number} [gasPrice=undefined] - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  async disapproveWithdrawAddress (\n    adminAddress,\n    tokenAddress,\n    withdrawAddress,\n    gasPrice = undefined\n  ) {\n    await assertAdmin(this, adminAddress)\n    const med = this.contract.methods.approveWithdrawAddress(\n      tokenAddress,\n      withdrawAddress,\n      false\n    )\n    return med.send({\n      from: adminAddress,\n      gas: await med.estimateGas({\n        from: adminAddress\n      }),\n      gasPrice: gasPrice\n    })\n  }\n\n  /**\n   * check for approval status of a token address to a particular address\n   * @param {object} address - address to withdraw the token to\n   * @param {string} tokenAddress - address of the token's smart contract. Must be deployed already.\n   * @returns {boolean} - true for approved, false otherwise\n   */\n  approvedWithdrawAddresses (address, tokenAddress) {\n    const addressHash = Web3.utils.soliditySha3(tokenAddress, address)\n    return this.contract.methods.approvedWithdrawAddresses(addressHash).call()\n  }\n\n  /**\n   * withdraw an amount of token to specified account\n   * @param {object} operatorAddress - address of operator account.\n   * @param {string} tokenAddress - address of the token's smart contract. Must be deployed already.\n   * @param {object} amount - amount to withdraw (BN|String|int), must be in wei.\n   * @param {string} toAddress - address for withdrawal. Must be approved already.\n   * @param {number} [gasPrice=undefined] - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  async withdraw (\n    operatorAddress,\n    tokenAddress,\n    amount,\n    toAddress,\n    gasPrice = undefined\n  ) {\n    await assertOperator(this, operatorAddress)\n    const med = this.contract.methods.withdraw(tokenAddress, amount, toAddress)\n    return med.send({\n      from: operatorAddress,\n      gas: await med.estimateGas({\n        from: operatorAddress\n      }),\n      gasPrice: gasPrice\n    })\n  }\n\n  /**\n   * Return balance of given token.\n   * @param {string} token - address of token to check balance.\n   * @return {number} - balance of given token\n   */\n  getBalance (token) {\n    return this.contract.methods.getBalance(token).call()\n  }\n  /**\n   * set different token wallet per token.\n   * @param {object} adminAddress - address of admin account.\n   * @param {string} tokenAddress - address of the token's smart contract.\n   * @param {object} walletAddress - address of wallet in which tokens are present.\n   */\n  async setTokenWallet(adminAddress, tokenAddress, walletAddress, gasPrice = undefined) {\n    await assertAdmin(this, adminAddress);\n\n    const setWallet = this.contract.methods.setTokenWallet(tokenAddress, walletAddress)\n    return setWallet.send({\n      from: adminAddress,\n      gas: await setWallet.estimateGas({from: adminAddress}),\n      gasPrice: gasPrice\n    })\n  }\n}\n",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/reserve_contract.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "class",
    "name": "ReserveContract",
    "memberof": "src/reserve_contract.js",
    "static": true,
    "longname": "src/reserve_contract.js~ReserveContract",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/reserve_contract.js",
    "importStyle": "ReserveContract",
    "description": "ReserveContract contains extended methods for KyberReserveContract",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "src/base_contract.js~BaseContract"
    ]
  },
  {
    "__docId__": 206,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#constructor",
    "access": "public",
    "description": "Create new BaseContract instance.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "provider",
        "description": "Web3 provider"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "address of kyber reserve smart contract."
      }
    ]
  },
  {
    "__docId__": 207,
    "kind": "member",
    "name": "web3",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#web3",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "contract",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#contract",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "enableTrade",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#enableTrade",
    "access": "public",
    "description": "enableTrade allow the reserve to continue trading",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of Admin account"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "disableTrade",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#disableTrade",
    "access": "public",
    "description": "disableTrade stop the reserve from trading",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "alerterAddress",
        "description": "address of Alerter account"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "tradeEnabled",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#tradeEnabled",
    "access": "public",
    "description": "tradeEnabled return true if the reserve is tradeEnabled, false otherwise",
    "lineNumber": 62,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "tradeEnabled status of the reserve"
    },
    "params": []
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "setContracts",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#setContracts",
    "access": "public",
    "description": "set Contract addresses for reserve contract.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of admin account."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "network",
        "description": "address of kyber network smart contract."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "conversion",
        "description": "address of kyber network smart contract."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sanity",
        "description": "(optional) - address of sanity rates contract."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "gasPrice",
        "description": "the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "conversionRatesContract",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#conversionRatesContract",
    "access": "public",
    "description": "conversionRatesContract return the address of conversion rates of this reserve",
    "lineNumber": 105,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "address of conversion rates contract"
    },
    "params": []
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "sanityRatesContract",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#sanityRatesContract",
    "access": "public",
    "description": "sanityRatesContract return the address of sanity rates of this reserve",
    "lineNumber": 113,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "address of sanity rates contract"
    },
    "params": []
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "kyberNetwork",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#kyberNetwork",
    "access": "public",
    "description": "kyberNetwork return the address of kyberNetwork contract of this reserve",
    "lineNumber": 121,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "address of kyberNetwork contract"
    },
    "params": []
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "approveWithdrawAddress",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#approveWithdrawAddress",
    "access": "public",
    "description": "approve withdraw address for a token on reserve.",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of admin account."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenAddress",
        "description": "contract address of the modifying token."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "withdrawAddress",
        "description": "address for withdrawal."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "gasPrice",
        "description": "the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "disapproveWithdrawAddress",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#disapproveWithdrawAddress",
    "access": "public",
    "description": "disapprove withdraw address for a token on reserve.",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of admin account."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenAddress",
        "description": "contract address of the modifying token."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "withdrawAddress",
        "description": "address for withdrawal."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "gasPrice",
        "description": "the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "approvedWithdrawAddresses",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#approvedWithdrawAddresses",
    "access": "public",
    "description": "check for approval status of a token address to a particular address",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - true for approved, false otherwise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "address to withdraw the token to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenAddress",
        "description": "address of the token's smart contract. Must be deployed already."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true for approved, false otherwise"
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "withdraw",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#withdraw",
    "access": "public",
    "description": "withdraw an amount of token to specified account",
    "lineNumber": 203,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "operatorAddress",
        "description": "address of operator account."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenAddress",
        "description": "address of the token's smart contract. Must be deployed already."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "amount to withdraw (BN|String|int), must be in wei."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "toAddress",
        "description": "address for withdrawal. Must be approved already."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "gasPrice",
        "description": "the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "getBalance",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#getBalance",
    "access": "public",
    "description": "Return balance of given token.",
    "lineNumber": 226,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "address of token to check balance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "balance of given token"
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "setTokenWallet",
    "memberof": "src/reserve_contract.js~ReserveContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/reserve_contract.js~ReserveContract#setTokenWallet",
    "access": "public",
    "description": "set different token wallet per token.",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of admin account."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tokenAddress",
        "description": "address of the token's smart contract."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "walletAddress",
        "description": "address of wallet in which tokens are present."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "file",
    "name": "src/sanity_rates_contract.js",
    "content": "import SanityRatesContractABI from '../abi/SanityRatesContract.abi.json'\nimport BaseContract from './base_contract.js'\nimport { validateAddress } from './validate.js'\nimport Web3 from 'web3'\nimport { assertOperator, assertAdmin } from './permission_assert.js'\n\n/**\n * SanityRatesContract represents the KyberNetwork sanity rates smart contract.\n * It's purpose is to prevent unusual rates from conversion rates contract\n * to be used.\n */\nexport default class SanityRatesContract extends BaseContract {\n  /**\n   * Create new SanityRatesContract instance.\n   * @param {object} provider - Web3 provider\n   * @param {string} address - address of smart contract.\n   */\n  constructor (web3, address) {\n    super(web3, address)\n    this.web3 = web3\n    this.contract = new this.web3.eth.Contract(SanityRatesContractABI, address)\n  }\n\n  /**\n   * Return the sanity Rate of a pair of token\n   * @param {string} src - ERC20 token contract address of source token\n   * @param {string} dest - ERC20 token contract address of destination token\n   * @returns {string} - the uint rate in strings format.\n   */\n  getSanityRate (src, dest) {\n    validateAddress(src)\n    validateAddress(dest)\n    return this.contract.methods.getSanityRate(src, dest).call()\n  }\n\n  /**\n   * Set Sanity Rate for the contract\n   * @param {object} operatorAddress - address of operator account\n   * @param {string[]} srcs - list of source ERC20 token contract addresses\n   * @param {uint[]} rates - list of Rates in ETH wei\n   * @param {number} gasPrice (optional) - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  async setSanityRates (operatorAddress, srcs, rates, gasPrice) {\n    await assertOperator(this, operatorAddress)\n    const med = this.contract.methods.setSanityRates(srcs, rates)\n    return med.send({\n      from: operatorAddress,\n      gas: await med.estimateGas({\n        from: operatorAddress\n      }),\n      gasPrice: gasPrice\n    })\n  }\n\n  /**\n   * resonableDiffInBps return the list of reasonableDiffs in basis points (bps)\n   * @param {string} address - ERC20 token contract address to query\n   * @returns {string} - the uint reasonable diff in string format\n   */\n  reasonableDiffInBps (address) {\n    validateAddress(address)\n    return this.contract.methods.reasonableDiffInBps(address).call()\n  }\n\n  /**\n   * setResonableDiff Set reasonable conversion rate difference in percentage (any conversion rate outside of this range is considered unreasonable).\n   * @param {object} adminAddress - address of admin account\n   * @param {string[]} addresses - list of ERC20 token contract to set\n   * @param {uint[]} diffs - list of diffs in bps (1 bps = 0.01%)\n   * @param {number} [gasPrice=undefined] - the gasPrice desired for the tx\n   * @returns {object} - the tx object of send() command from this contract method\n   */\n  async setReasonableDiff (adminAddress, addresses, diffs, gasPrice = undefined) {\n    await assertAdmin(this, adminAddress)\n    const med = this.contract.methods.setReasonableDiff(addresses, diffs)\n    return med.send({\n      from: adminAddress,\n      gas: await med.estimateGas({\n        from: adminAddress\n      }),\n      gasPrice: gasPrice\n    })\n  }\n}\n",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/sanity_rates_contract.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "class",
    "name": "SanityRatesContract",
    "memberof": "src/sanity_rates_contract.js",
    "static": true,
    "longname": "src/sanity_rates_contract.js~SanityRatesContract",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/sanity_rates_contract.js",
    "importStyle": "SanityRatesContract",
    "description": "SanityRatesContract represents the KyberNetwork sanity rates smart contract.\nIt's purpose is to prevent unusual rates from conversion rates contract\nto be used.",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/base_contract.js~BaseContract"
    ]
  },
  {
    "__docId__": 224,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/sanity_rates_contract.js~SanityRatesContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sanity_rates_contract.js~SanityRatesContract#constructor",
    "access": "public",
    "description": "Create new SanityRatesContract instance.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "provider",
        "description": "Web3 provider"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "address of smart contract."
      }
    ]
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "web3",
    "memberof": "src/sanity_rates_contract.js~SanityRatesContract",
    "static": false,
    "longname": "src/sanity_rates_contract.js~SanityRatesContract#web3",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "member",
    "name": "contract",
    "memberof": "src/sanity_rates_contract.js~SanityRatesContract",
    "static": false,
    "longname": "src/sanity_rates_contract.js~SanityRatesContract#contract",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "getSanityRate",
    "memberof": "src/sanity_rates_contract.js~SanityRatesContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sanity_rates_contract.js~SanityRatesContract#getSanityRate",
    "access": "public",
    "description": "Return the sanity Rate of a pair of token",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - the uint rate in strings format."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "ERC20 token contract address of source token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dest",
        "description": "ERC20 token contract address of destination token"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the uint rate in strings format."
    }
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "setSanityRates",
    "memberof": "src/sanity_rates_contract.js~SanityRatesContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/sanity_rates_contract.js~SanityRatesContract#setSanityRates",
    "access": "public",
    "description": "Set Sanity Rate for the contract",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "operatorAddress",
        "description": "address of operator account"
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "srcs",
        "description": "list of source ERC20 token contract addresses"
      },
      {
        "nullable": null,
        "types": [
          "uint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "rates",
        "description": "list of Rates in ETH wei"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "gasPrice",
        "description": "(optional) - the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "reasonableDiffInBps",
    "memberof": "src/sanity_rates_contract.js~SanityRatesContract",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sanity_rates_contract.js~SanityRatesContract#reasonableDiffInBps",
    "access": "public",
    "description": "resonableDiffInBps return the list of reasonableDiffs in basis points (bps)",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - the uint reasonable diff in string format"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "ERC20 token contract address to query"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the uint reasonable diff in string format"
    }
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "setReasonableDiff",
    "memberof": "src/sanity_rates_contract.js~SanityRatesContract",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/sanity_rates_contract.js~SanityRatesContract#setReasonableDiff",
    "access": "public",
    "description": "setResonableDiff Set reasonable conversion rate difference in percentage (any conversion rate outside of this range is considered unreasonable).",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - the tx object of send() command from this contract method"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "adminAddress",
        "description": "address of admin account"
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "addresses",
        "description": "list of ERC20 token contract to set"
      },
      {
        "nullable": null,
        "types": [
          "uint[]"
        ],
        "spread": false,
        "optional": false,
        "name": "diffs",
        "description": "list of diffs in bps (1 bps = 0.01%)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "gasPrice",
        "description": "the gasPrice desired for the tx"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the tx object of send() command from this contract method"
    }
  },
  {
    "__docId__": 231,
    "kind": "file",
    "name": "src/validate.js",
    "content": "import Web3 from 'web3'\n\n/**\n * throw an exception if the given address is not a valid Ethereum address.\n * @param address {string} - an Ethereum address\n */\nexport const validateAddress = address => {\n  if (!Web3.utils.isAddress(address)) {\n    throw new Error(`invalid address: '${address}'`)\n  }\n}\n",
    "static": true,
    "longname": "/Users/sree/Desktop/fpr-sdk.js/src/validate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "validateAddress",
    "memberof": "src/validate.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validate.js~validateAddress",
    "access": "public",
    "export": true,
    "importPath": "kyber-fpr-sdk/src/validate.js",
    "importStyle": "{validateAddress}",
    "description": "throw an exception if the given address is not a valid Ethereum address.",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "{string} - an Ethereum address"
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# Kyber Fed Price Reserve JS SDK\n\nThis SDK allows market makers and developers to deploy, maintain and operate an on-chain Kyber Network [Fed Price Reserve](https://developer.kyber.network/docs/Reserves-Types/) using Javascript and node.\n\n## Useful Links\n- [Example Code with Walkthroughs](https://github.com/KyberNetwork/fpr-js-reference)\n- [Onchain Market Making Primer](fpr-primer.md)\n- [Kyber FPRs Explained](https://blog.kyber.network/kyber-fed-price-reserve-fpr-on-chain-market-making-for-professionals-7fea29ceac6c)\n- [Kyber Reserve Documentation](https://developer.kyber.network/docs/Reserves-FedPriceReserve/)\n- [API Documentation](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/)\n\n## Installation\n\nInstall the package with:\n\n    npm install --save kyber-fpr-sdk    \n\n## Usage\n\nThere are 2 main classes in this SDK.\n\n- [Deployer](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/deployer.js~Deployer.html) class allows users to deploy new smart contracts. \n\n- [Reserve](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html) class allows users to manage the key market making functions, including permission management, setting and controling quotes and fund security. \n\n\n## Deployer Class\n\nThe [Deployer](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/deployer.js~Deployer.html) class only needs the [web3 provider](https://web3js.readthedocs.io/en/1.0/web3.html) to init. After deployment, it returns a set of [addresses](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/addresses.js~Addresses.html) for required contracts. \n\n\n```js\n// ethereum Remote Node Provider, for example infura.io\nconst provider = new Web3.providers.HttpProvider('ethereum-node-url')\nconst web3 = new Web3(provider)\n\n// initialize account from private key\nconst account = dpl.web3.eth.accounts.privateKeyToAccount('private-key')\n// initialize account from keystore file\n// const account = dpl.web3.eth.accounts.decrypt(fs.readFileSync(), \"your-keystore-passphrase\");\n\ndpl.web3.eth.accounts.wallet.add(account)\n\nconst dpl = new Deployer(web3)\n\nlet addresses;\n(async () =>  { \n    addresses = await dpl.deploy(account)\n    console.log(addresses)\n})()\n\n```\n\n## Reserve Class\n\nReserve class allow users to make call to the smart contracts and query its state on the blockchain. \n\n- Permission infos: calling through baseContract's methods: [admin](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/base_contract.js~BaseContract.html#instance-method-admin), [getAlerters](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/base_contract.js~BaseContract.html#instance-method-getAlerters), [getOperators](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/base_contract.js~BaseContract.html#instance-method-getOperators) and [pendingAdmin](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/base_contract.js~BaseContract.html#instance-method-pendingAdmin). There are 3 contracts in Reserver object, all of these contracts came with these same methods. \n- Smart Contract addresses info: can be called as reserve's methods, which are: [conversionRatesContract](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-conversionRatesContract), [KyberNetwork](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-kyberNetwork), and [sanityRatesContract](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-sanityRatesContract) for this reserve\n- Rate infos: can be called as reserve's object methods, which are: [getBuyRates](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-getBuyRates), [getSanityRates](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-getSanityRate), [getSellRates](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-getSellRates), and [reasonableDiffInBps](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-reasonableDiffInBps) \n- Funds secure related infos: can be called as reserve's methods, which are: [tradeEnabled](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-tradeEnabled), [getBalance](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-getBalance) and [approvedWithdrawAddresses](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-approvedWithdrawAddresses)\n\nThe following example queries the sanityRatesContract's admin and the SanityRates contract:\n\n```js\nconst reserve = new Reserve(web3, addresses);\nconst KNCTokenAddress = \"0x095c48fbaa566917474c48f745e7a430ffe7bc27\";\nconst ETHTokenAddress = \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\";\n\n(async () => {\n  // get sanityContract address\n  console.log('SanityRates contract address is ', await reserve.sanityRates.admin())\n  const sanityRates = await reserve.getSanityRate(KNCTokenAddress, ETHTokenAddress)\n  console.log('SanityRates for KNC-ETH is ', sanityRates)\n})();\n```\n\n\n#### Permission Control\n\nMore on permission control at [setting permission](https://developer.kyber.network/docs/ReservesGuide#setting-permissions). To set permission with SDK, call to the contract that needs to change account's role with these methods from [baseContract](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/base_contract.js~BaseContract.html). The following example add Operator 0x0a4c79cE84202b03e95B7a692E5D728d83C44c76 to ConversionRates contract\n\n```js\nconst reserve = new Reserve(web3, addresses);\n\n(async () => {\n  // admin operations\n  await reserve.ConversionRates.addOperator(adminAccount, '0x0a4c79cE84202b03e95B7a692E5D728d83C44c76');\n  console.log(await reserve.ConversionRates.getOperators())\n})();\n```\n\n#### Control Rates\nControl rates operations can be called directly as [reserve Object](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html)'s methods. There are 5 operations regarding set rates: [setRate](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-setRate), [setSanityRates](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-setSanityRates), [setReasonableDiff](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-setReasonableDiff), [setQtyStepFuncion](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-setQtyStepFunction) and [setImbalanceStepFunction](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-setImbalanceStepFunction). More about the meaning of these operations can be viewed in [Kyber's Developer guide](https://developer.kyber.network/docs/ReservesGuide#step-3-setting-token-conversion-rates-prices).\nThe following example set the base rate for KNC token.\n\n```js\nconst reserve = new Reserve(web3, addresses);\nconst operatorAccount = web3.eth.accounts.privateKeyToAccount('operatorAccountPrivateKey');\nconst KNCTokenAddress = \"0x095c48fbaa566917474c48f745e7a430ffe7bc27\";\n\n(async () => {\n  // create rateSetting object and set base buy/ sell rate.\n  rate = new RateSetting(KNCTokenAddress, 10000000, 1100000)\n  await reserve.setRate( \n    operatorAccount,\n    [rate],\n    (await web3.eth.getBlockNumber()) + 1\n  )\n  // should log 10000000 and 1100000 as buy/sell rate\n  console.log(await reserve.getBuyRates(KNCTokenAddress, 1,await web3.eth.getBlockNumber()))\n  console.log(await reserve.getSellRates(KNCTokenAddress, 1,await web3.eth.getBlockNumber()))\n})();\n```\n\n#### Fund Security\nTo secure reserve's fund, there are two main operations:\n- withdrawal management: can be called as reserve's methods, which are: [approveWithdrawAddress](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-approveWithdrawAddress) and [withdraw](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-withdraw).\n- and trade managementControl: can be called as reserve's methods, which are: [disableTrade](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-disableTrade) and [enableTrade](https://doc.esdoc.org/github.com/KyberNetwork/reserve-sdk.js/class/src/reserve.js~Reserve.html#instance-method-enableTrade)\n\nThe following example show how to stop trade from the reserve and withdraw 1000 KNC from reserve to a receiver account to secure the fund: \n\n```js\n  const reserve = new Reserve(web3, addresses);\n  const adminAccount = web3.eth.accounts.privateKeyToAccount('adminAccountPrivateKey');\n  const operatorAccount = web3.eth.accounts.privateKeyToAccount('operatorAccountPrivateKey');\n  const alerterAccount = web3.eth.accounts.privateKeyToAccount('alerterAccountPrivateKey');\n  const receiverAddress = '0x69E3D8B2AE1613bEe2De17C5101E58CDae8a59D4' ;\n  const KNCTokenAddress = '0x095c48fbaa566917474c48f745e7a430ffe7bc27';\n\n  (async () => {\n    // stop trade. \n    await reserveContract.disableTrade(alerterAccount)\n    // approve receiver to receive KNC from this reserve\n    await reserveContract.approveWithdrawAddress(operatorAccount,KNCTokenAddress, receiverAddress)\n    if (await reserveContract.approvedWithdrawAddresses(receiverAddress, KNCTokenAddress) == true) {\n      await reserveContract.withdraw(adminAccount, KNCTokenAddress, 1000)\n    } else {\n      console.log('cannot withdraw KNC at this moment, please retry again later')\n    }\n  })();\n```\n",
    "longname": "/Users/sree/Desktop/fpr-sdk.js/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"kyber-fpr-sdk\",\n  \"version\": \"0.1.3\",\n  \"description\": \"SDK to deploy and operate a Kyber FPR \",\n  \"main\": \"./dist/index.js\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha --require babel-core/register --require babel-polyfill --timeout 10s\",\n    \"format\": \"prettier-standard 'src/**/*.js' 'test/**/*.js'\",\n    \"lint\": \"standard 'src/**/*.js' 'test/**/*.js'\",\n    \"doc\": \"esdoc\",\n    \"build\": \"BABEL_ENV=production babel src --out-dir dist\",\n    \"prepare\": \"npm run build\"\n  },\n  \"standard\": {\n    \"env\": {\n      \"mocha\": true\n    }\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/KyberNetwork/fpr-sdk.js.git\"\n  },\n  \"author\": \"Diep Pham <diep@kyber.network>\",\n  \"contributors\": [\n    \"Liem D. Nguyen <liem@kyber.network>\",\n    \"Ming <ming@kyber.network>\"\n  ],\n  \"license\": \"MIT\",\n  \"homepage\": \"https://github.com/KyberNetwork/fpr-sdk.js\",\n  \"devDependencies\": {\n    \"@babel/plugin-transform-runtime\": \"^7.10.4\",\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-minify\": \"^0.4.3\",\n    \"babel-plugin-transform-es2015-modules-commonjs\": \"^6.26.2\",\n    \"babel-plugin-transform-runtime\": \"^6.23.0\",\n    \"babel-preset-env\": \"^1.7.0\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"ganache-cli\": \"^6.9.1\",\n    \"mocha\": \"^5.2.0\",\n    \"prettier-standard\": \"^8.0.1\",\n    \"standard\": \"^11.0.1\"\n  },\n  \"dependencies\": {\n    \"babel-polyfill\": \"^6.26.0\",\n    \"babel-runtime\": \"^6.26.0\",\n    \"bignumber.js\": \"^9.0.0\",\n    \"web3\": \"^1.2.9\"\n  }\n}\n",
    "longname": "/Users/sree/Desktop/fpr-sdk.js/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]